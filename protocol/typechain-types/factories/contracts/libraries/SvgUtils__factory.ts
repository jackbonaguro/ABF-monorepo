/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  SvgUtils,
  SvgUtilsInterface,
} from '../../../contracts/libraries/SvgUtils';

const _abi = [
  {
    inputs: [],
    name: 'DECIMALS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ONE_UNIT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'min',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'max',
        type: 'uint256',
      },
      {
        internalType: 'bytes1',
        name: 'scale',
        type: 'bytes1',
      },
    ],
    name: 'lerpWithDecimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 's',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'len',
        type: 'uint256',
      },
    ],
    name: 'padZeros',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'toColorHexString',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes1',
        name: 'r',
        type: 'bytes1',
      },
      {
        internalType: 'bytes1',
        name: 'g',
        type: 'bytes1',
      },
      {
        internalType: 'bytes1',
        name: 'b',
        type: 'bytes1',
      },
    ],
    name: 'toColorHexStringByBytes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'toDecimalString',
    outputs: [
      {
        internalType: 'string',
        name: 's',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'wholeNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x611826610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c80637be7619a116100705780637be7619a146101505780638fc2908e14610180578063c5d0e1cf146101b0578063e4eca9d6146101e0578063eb43af00146102105761009d565b80632e0f2625146100a25780633f47e662146100c05780634de45dca146100f05780635f47386a14610120575b600080fd5b6100aa61022e565b6040516100b79190611220565b60405180910390f35b6100da60048036038101906100d59190611033565b610233565b6040516100e79190611220565b60405180910390f35b61010a60048036038101906101059190611033565b610255565b6040516101179190611220565b60405180910390f35b61013a60048036038101906101359190610f90565b610277565b60405161014791906111de565b60405180910390f35b61016a6004803603810190610165919061105c565b6108db565b6040516101779190611220565b60405180910390f35b61019a60048036038101906101959190610fdf565b6109ed565b6040516101a791906111de565b60405180910390f35b6101ca60048036038101906101c59190611033565b610a43565b6040516101d791906111de565b60405180910390f35b6101fa60048036038101906101f59190611033565b610c84565b60405161020791906111de565b60405180910390f35b610218610d40565b6040516102259190611220565b60405180910390f35b600481565b60006004600a61024391906113a3565b8261024e919061166b565b9050919050565b60006004600a61026591906113a3565b82610270919061131f565b9050919050565b60606000600767ffffffffffffffff8111156102bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156102ee5781602001600182028036833780820191505090505b5090507f23000000000000000000000000000000000000000000000000000000000000008160008151811061034c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3031323334353637383961626364656600000000000000000000000000000000600f8660f81c1660ff16601081106103dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b8160028151811061041b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506004857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c94507f3031323334353637383961626364656600000000000000000000000000000000600f8660f81c1660ff16601081106104d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b81600181518110610513577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3031323334353637383961626364656600000000000000000000000000000000600f8560f81c1660ff16601081106105a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816004815181106105e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506004847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c93507f3031323334353637383961626364656600000000000000000000000000000000600f8560f81c1660ff166010811061069c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816003815181106106da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3031323334353637383961626364656600000000000000000000000000000000600f8460f81c1660ff166010811061076b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816006815181106107a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506004837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c92507f3031323334353637383961626364656600000000000000000000000000000000600f8460f81c1660ff1660108110610863577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816005815181106108a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350809150509392505050565b60008060f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561092a576004600a61091891906113a3565b8461092391906114c1565b90506109e6565b60ff60f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610978576004600a61096691906113a3565b8361097191906114c1565b90506109e6565b60006101008360f81c60ff166004600a61099291906113a3565b878761099e919061151b565b6109a891906114c1565b6109b291906114c1565b6109bc919061131f565b9050806004600a6109cd91906113a3565b866109d891906114c1565b6109e291906112c9565b9150505b9392505050565b606060008351905060008490505b83821015610a385780604051602001610a1491906111bc565b60405160208183030381529060405290508180610a3090611622565b9250506109fb565b809250505092915050565b60606000600767ffffffffffffffff811115610a88577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610aba5781602001600182028036833780820191505090505b5090507f230000000000000000000000000000000000000000000000000000000000000081600081518110610b18577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600690505b6000811115610c37577f3031323334353637383961626364656600000000000000000000000000000000600f851660108110610bb3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610bf0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c935080610c30906115c7565b9050610b4e565b5060008314610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7290611200565b60405180910390fd5b80915050919050565b60606000821415610ccc576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d3b565b610ced6004600a610cdd91906113a3565b83610ce8919061131f565b610d51565b610d18610d116004600a610d0191906113a3565b85610d0c919061166b565b610d51565b60046109ed565b604051602001610d2992919061118d565b60405160208183030381529060405290505b919050565b6004600a610d4e91906113a3565b81565b60606000821415610d99576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610ef9565b600082905060005b60008214610dcb578080610db490611622565b915050600a82610dc4919061131f565b9150610da1565b60008167ffffffffffffffff811115610e0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3f5781602001600182028036833780820191505090505b5090505b60008514610ef257600182610e58919061151b565b9150600a85610e67919061166b565b6030610e7391906112c9565b60f81b818381518110610eaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610eeb919061131f565b9450610e43565b8093505050505b919050565b6000610f11610f0c84611260565b61123b565b905082815260208101848484011115610f2957600080fd5b610f34848285611585565b509392505050565b600081359050610f4b816117c2565b92915050565b600082601f830112610f6257600080fd5b8135610f72848260208601610efe565b91505092915050565b600081359050610f8a816117d9565b92915050565b600080600060608486031215610fa557600080fd5b6000610fb386828701610f3c565b9350506020610fc486828701610f3c565b9250506040610fd586828701610f3c565b9150509250925092565b60008060408385031215610ff257600080fd5b600083013567ffffffffffffffff81111561100c57600080fd5b61101885828601610f51565b925050602061102985828601610f7b565b9150509250929050565b60006020828403121561104557600080fd5b600061105384828501610f7b565b91505092915050565b60008060006060848603121561107157600080fd5b600061107f86828701610f7b565b935050602061109086828701610f7b565b92505060406110a186828701610f3c565b9150509250925092565b60006110b682611291565b6110c081856112ad565b93506110d0818560208601611594565b6110d981611729565b840191505092915050565b60006110ef82611291565b6110f981856112be565b9350611109818560208601611594565b80840191505092915050565b60006111226001836112be565b915061112d82611747565b600182019050919050565b600061114560208361129c565b915061115082611770565b602082019050919050565b60006111686001836112be565b915061117382611799565b600182019050919050565b6111878161157b565b82525050565b600061119982856110e4565b91506111a48261115b565b91506111b082846110e4565b91508190509392505050565b60006111c782611115565b91506111d382846110e4565b915081905092915050565b600060208201905081810360008301526111f881846110ab565b905092915050565b6000602082019050818103600083015261121981611138565b9050919050565b6000602082019050611235600083018461117e565b92915050565b6000611245611256565b905061125182826115f1565b919050565b6000604051905090565b600067ffffffffffffffff82111561127b5761127a6116fa565b5b61128482611729565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006112d48261157b565b91506112df8361157b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113145761131361169c565b5b828201905092915050565b600061132a8261157b565b91506113358361157b565b925082611345576113446116cb565b5b828204905092915050565b6000808291508390505b600185111561139a578086048111156113765761137561169c565b5b60018516156113855780820291505b80810290506113938561173a565b945061135a565b94509492505050565b60006113ae8261157b565b91506113b98361157b565b92506113e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846113ee565b905092915050565b6000826113fe57600190506114ba565b8161140c57600090506114ba565b8160018114611422576002811461142c5761145b565b60019150506114ba565b60ff84111561143e5761143d61169c565b5b8360020a9150848211156114555761145461169c565b5b506114ba565b5060208310610133831016604e8410600b84101617156114905782820a90508381111561148b5761148a61169c565b5b6114ba565b61149d8484846001611350565b925090508184048111156114b4576114b361169c565b5b81810290505b9392505050565b60006114cc8261157b565b91506114d78361157b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115105761150f61169c565b5b828202905092915050565b60006115268261157b565b91506115318361157b565b9250828210156115445761154361169c565b5b828203905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115b2578082015181840152602081019050611597565b838111156115c1576000848401525b50505050565b60006115d28261157b565b915060008214156115e6576115e561169c565b5b600182039050919050565b6115fa82611729565b810181811067ffffffffffffffff82111715611619576116186116fa565b5b80604052505050565b600061162d8261157b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116605761165f61169c565b5b600182019050919050565b60006116768261157b565b91506116818361157b565b925082611691576116906116cb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f3000000000000000000000000000000000000000000000000000000000000000600082015250565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b6117cb8161154f565b81146117d657600080fd5b50565b6117e28161157b565b81146117ed57600080fd5b5056fea2646970667358221220c61a7c2c3f9ceb5c8f6947aad078f5b51ccfb22b12b79f73dc0f761f1a796d4764736f6c63430008040033';

type SvgUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SvgUtilsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SvgUtils__factory extends ContractFactory {
  constructor(...args: SvgUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SvgUtils> {
    return super.deploy(overrides || {}) as Promise<SvgUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SvgUtils {
    return super.attach(address) as SvgUtils;
  }
  override connect(signer: Signer): SvgUtils__factory {
    return super.connect(signer) as SvgUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SvgUtilsInterface {
    return new utils.Interface(_abi) as SvgUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SvgUtils {
    return new Contract(address, _abi, signerOrProvider) as SvgUtils;
  }
}
