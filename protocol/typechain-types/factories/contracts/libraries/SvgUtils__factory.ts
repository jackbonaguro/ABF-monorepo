/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SvgUtils,
  SvgUtilsInterface,
} from '../../../contracts/libraries/SvgUtils';

const _abi = [
  {
    inputs: [],
    name: 'DECIMALS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ONE_UNIT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'min',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'max',
        type: 'uint256',
      },
      {
        internalType: 'bytes1',
        name: 'scale',
        type: 'bytes1',
      },
    ],
    name: 'lerpWithDecimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 's',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'len',
        type: 'uint256',
      },
    ],
    name: 'padZeros',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'toDecimalString',
    outputs: [
      {
        internalType: 'string',
        name: 's',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'wholeNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x610e15610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80637be7619a116100655780637be7619a1461010a5780638fc2908e1461013a578063e4eca9d61461016a578063eb43af001461019a57610087565b80632e0f26251461008c5780633f47e662146100aa5780634de45dca146100da575b600080fd5b6100946101b8565b6040516100a19190610873565b60405180910390f35b6100c460048036038101906100bf91906106c9565b6101bd565b6040516100d19190610873565b60405180910390f35b6100f460048036038101906100ef91906106c9565b6101df565b6040516101019190610873565b60405180910390f35b610124600480360381019061011f91906106f2565b610201565b6040516101319190610873565b60405180910390f35b610154600480360381019061014f9190610675565b610313565b6040516101619190610851565b60405180910390f35b610184600480360381019061017f91906106c9565b610369565b6040516101919190610851565b60405180910390f35b6101a2610425565b6040516101af9190610873565b60405180910390f35b600481565b60006004600a6101cd91906109e5565b826101d89190610c83565b9050919050565b60006004600a6101ef91906109e5565b826101fa9190610961565b9050919050565b60008060f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610250576004600a61023e91906109e5565b846102499190610b03565b905061030c565b60ff60f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561029e576004600a61028c91906109e5565b836102979190610b03565b905061030c565b60006101008360f81c60ff166004600a6102b891906109e5565b87876102c49190610b5d565b6102ce9190610b03565b6102d89190610b03565b6102e29190610961565b9050806004600a6102f391906109e5565b866102fe9190610b03565b610308919061090b565b9150505b9392505050565b606060008351905060008490505b8382101561035e578060405160200161033a919061082f565b6040516020818303038152906040529050818061035690610c3a565b925050610321565b809250505092915050565b606060008214156103b1576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610420565b6103d26004600a6103c291906109e5565b836103cd9190610961565b610436565b6103fd6103f66004600a6103e691906109e5565b856103f19190610c83565b610436565b6004610313565b60405160200161040e929190610800565b60405160208183030381529060405290505b919050565b6004600a61043391906109e5565b81565b6060600082141561047e576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506105de565b600082905060005b600082146104b057808061049990610c3a565b915050600a826104a99190610961565b9150610486565b60008167ffffffffffffffff8111156104f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156105245781602001600182028036833780820191505090505b5090505b600085146105d75760018261053d9190610b5d565b9150600a8561054c9190610c83565b6030610558919061090b565b60f81b818381518110610594577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856105d09190610961565b9450610528565b8093505050505b919050565b60006105f66105f1846108b3565b61088e565b90508281526020810184848401111561060e57600080fd5b610619848285610bc7565b509392505050565b60008135905061063081610db1565b92915050565b600082601f83011261064757600080fd5b81356106578482602086016105e3565b91505092915050565b60008135905061066f81610dc8565b92915050565b6000806040838503121561068857600080fd5b600083013567ffffffffffffffff8111156106a257600080fd5b6106ae85828601610636565b92505060206106bf85828601610660565b9150509250929050565b6000602082840312156106db57600080fd5b60006106e984828501610660565b91505092915050565b60008060006060848603121561070757600080fd5b600061071586828701610660565b935050602061072686828701610660565b925050604061073786828701610621565b9150509250925092565b600061074c826108e4565b61075681856108ef565b9350610766818560208601610bd6565b61076f81610d41565b840191505092915050565b6000610785826108e4565b61078f8185610900565b935061079f818560208601610bd6565b80840191505092915050565b60006107b8600183610900565b91506107c382610d5f565b600182019050919050565b60006107db600183610900565b91506107e682610d88565b600182019050919050565b6107fa81610bbd565b82525050565b600061080c828561077a565b9150610817826107ce565b9150610823828461077a565b91508190509392505050565b600061083a826107ab565b9150610846828461077a565b915081905092915050565b6000602082019050818103600083015261086b8184610741565b905092915050565b600060208201905061088860008301846107f1565b92915050565b60006108986108a9565b90506108a48282610c09565b919050565b6000604051905090565b600067ffffffffffffffff8211156108ce576108cd610d12565b5b6108d782610d41565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061091682610bbd565b915061092183610bbd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561095657610955610cb4565b5b828201905092915050565b600061096c82610bbd565b915061097783610bbd565b92508261098757610986610ce3565b5b828204905092915050565b6000808291508390505b60018511156109dc578086048111156109b8576109b7610cb4565b5b60018516156109c75780820291505b80810290506109d585610d52565b945061099c565b94509492505050565b60006109f082610bbd565b91506109fb83610bbd565b9250610a287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a30565b905092915050565b600082610a405760019050610afc565b81610a4e5760009050610afc565b8160018114610a645760028114610a6e57610a9d565b6001915050610afc565b60ff841115610a8057610a7f610cb4565b5b8360020a915084821115610a9757610a96610cb4565b5b50610afc565b5060208310610133831016604e8410600b8410161715610ad25782820a905083811115610acd57610acc610cb4565b5b610afc565b610adf8484846001610992565b92509050818404811115610af657610af5610cb4565b5b81810290505b9392505050565b6000610b0e82610bbd565b9150610b1983610bbd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5257610b51610cb4565b5b828202905092915050565b6000610b6882610bbd565b9150610b7383610bbd565b925082821015610b8657610b85610cb4565b5b828203905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610bf4578082015181840152602081019050610bd9565b83811115610c03576000848401525b50505050565b610c1282610d41565b810181811067ffffffffffffffff82111715610c3157610c30610d12565b5b80604052505050565b6000610c4582610bbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7857610c77610cb4565b5b600182019050919050565b6000610c8e82610bbd565b9150610c9983610bbd565b925082610ca957610ca8610ce3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f3000000000000000000000000000000000000000000000000000000000000000600082015250565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b610dba81610b91565b8114610dc557600080fd5b50565b610dd181610bbd565b8114610ddc57600080fd5b5056fea264697066735822122060eb5f0b76405a9dfbbbff6312940e90a2fd30d0774d28fd02e5566bae3da28864736f6c63430008040033';

type SvgUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SvgUtilsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SvgUtils__factory extends ContractFactory {
  constructor(...args: SvgUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SvgUtils> {
    return super.deploy(overrides || {}) as Promise<SvgUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SvgUtils {
    return super.attach(address) as SvgUtils;
  }
  override connect(signer: Signer): SvgUtils__factory {
    return super.connect(signer) as SvgUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SvgUtilsInterface {
    return new utils.Interface(_abi) as SvgUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SvgUtils {
    return new Contract(address, _abi, signerOrProvider) as SvgUtils;
  }
}
