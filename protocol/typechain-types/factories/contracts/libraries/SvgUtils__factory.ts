/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  SvgUtils,
  SvgUtilsInterface,
} from '../../../contracts/libraries/SvgUtils';

const _abi = [
  {
    inputs: [],
    name: 'DECIMALS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ONE_UNIT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'min',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'max',
        type: 'uint256',
      },
      {
        internalType: 'bytes1',
        name: 'scale',
        type: 'bytes1',
      },
    ],
    name: 'lerpWithDecimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 's',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'len',
        type: 'uint256',
      },
    ],
    name: 'padZeros',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'toColorHexString',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes1',
        name: 'r',
        type: 'bytes1',
      },
      {
        internalType: 'bytes1',
        name: 'g',
        type: 'bytes1',
      },
      {
        internalType: 'bytes1',
        name: 'b',
        type: 'bytes1',
      },
    ],
    name: 'toColorHexStringByBytes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'toDecimalString',
    outputs: [
      {
        internalType: 'string',
        name: 's',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'n',
        type: 'uint256',
      },
    ],
    name: 'wholeNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x611825610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c80637be7619a116100705780637be7619a146101505780638fc2908e14610180578063c5d0e1cf146101b0578063e4eca9d6146101e0578063eb43af00146102105761009d565b80632e0f2625146100a25780633f47e662146100c05780634de45dca146100f05780635f47386a14610120575b600080fd5b6100aa61022e565b6040516100b7919061121f565b60405180910390f35b6100da60048036038101906100d59190611032565b610233565b6040516100e7919061121f565b60405180910390f35b61010a60048036038101906101059190611032565b610255565b604051610117919061121f565b60405180910390f35b61013a60048036038101906101359190610f8f565b610277565b60405161014791906111dd565b60405180910390f35b61016a6004803603810190610165919061105b565b6108db565b604051610177919061121f565b60405180910390f35b61019a60048036038101906101959190610fde565b6109ec565b6040516101a791906111dd565b60405180910390f35b6101ca60048036038101906101c59190611032565b610a42565b6040516101d791906111dd565b60405180910390f35b6101fa60048036038101906101f59190611032565b610c83565b60405161020791906111dd565b60405180910390f35b610218610d3f565b604051610225919061121f565b60405180910390f35b600481565b60006004600a61024391906113a2565b8261024e919061166a565b9050919050565b60006004600a61026591906113a2565b82610270919061131e565b9050919050565b60606000600767ffffffffffffffff8111156102bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156102ee5781602001600182028036833780820191505090505b5090507f23000000000000000000000000000000000000000000000000000000000000008160008151811061034c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3031323334353637383961626364656600000000000000000000000000000000600f8660f81c1660ff16601081106103dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b8160028151811061041b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506004857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c94507f3031323334353637383961626364656600000000000000000000000000000000600f8660f81c1660ff16601081106104d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b81600181518110610513577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3031323334353637383961626364656600000000000000000000000000000000600f8560f81c1660ff16601081106105a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816004815181106105e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506004847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c93507f3031323334353637383961626364656600000000000000000000000000000000600f8560f81c1660ff166010811061069c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816003815181106106da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3031323334353637383961626364656600000000000000000000000000000000600f8460f81c1660ff166010811061076b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816006815181106107a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506004837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c92507f3031323334353637383961626364656600000000000000000000000000000000600f8460f81c1660ff1660108110610863577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b816005815181106108a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350809150509392505050565b60008060f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561092a576004600a61091891906113a2565b8461092391906114c0565b90506109e5565b60ff60f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610978576004600a61096691906113a2565b8361097191906114c0565b90506109e5565b600060ff8360f81c60ff166004600a61099191906113a2565b878761099d919061151a565b6109a791906114c0565b6109b191906114c0565b6109bb919061131e565b9050806004600a6109cc91906113a2565b866109d791906114c0565b6109e191906112c8565b9150505b9392505050565b606060008351905060008490505b83821015610a375780604051602001610a1391906111bb565b60405160208183030381529060405290508180610a2f90611621565b9250506109fa565b809250505092915050565b60606000600767ffffffffffffffff811115610a87577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ab95781602001600182028036833780820191505090505b5090507f230000000000000000000000000000000000000000000000000000000000000081600081518110610b17577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600690505b6000811115610c36577f3031323334353637383961626364656600000000000000000000000000000000600f851660108110610bb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610bef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600484901c935080610c2f906115c6565b9050610b4d565b5060008314610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c71906111ff565b60405180910390fd5b80915050919050565b60606000821415610ccb576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d3a565b610cec6004600a610cdc91906113a2565b83610ce7919061131e565b610d50565b610d17610d106004600a610d0091906113a2565b85610d0b919061166a565b610d50565b60046109ec565b604051602001610d2892919061118c565b60405160208183030381529060405290505b919050565b6004600a610d4d91906113a2565b81565b60606000821415610d98576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610ef8565b600082905060005b60008214610dca578080610db390611621565b915050600a82610dc3919061131e565b9150610da0565b60008167ffffffffffffffff811115610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3e5781602001600182028036833780820191505090505b5090505b60008514610ef157600182610e57919061151a565b9150600a85610e66919061166a565b6030610e7291906112c8565b60f81b818381518110610eae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610eea919061131e565b9450610e42565b8093505050505b919050565b6000610f10610f0b8461125f565b61123a565b905082815260208101848484011115610f2857600080fd5b610f33848285611584565b509392505050565b600081359050610f4a816117c1565b92915050565b600082601f830112610f6157600080fd5b8135610f71848260208601610efd565b91505092915050565b600081359050610f89816117d8565b92915050565b600080600060608486031215610fa457600080fd5b6000610fb286828701610f3b565b9350506020610fc386828701610f3b565b9250506040610fd486828701610f3b565b9150509250925092565b60008060408385031215610ff157600080fd5b600083013567ffffffffffffffff81111561100b57600080fd5b61101785828601610f50565b925050602061102885828601610f7a565b9150509250929050565b60006020828403121561104457600080fd5b600061105284828501610f7a565b91505092915050565b60008060006060848603121561107057600080fd5b600061107e86828701610f7a565b935050602061108f86828701610f7a565b92505060406110a086828701610f3b565b9150509250925092565b60006110b582611290565b6110bf81856112ac565b93506110cf818560208601611593565b6110d881611728565b840191505092915050565b60006110ee82611290565b6110f881856112bd565b9350611108818560208601611593565b80840191505092915050565b60006111216001836112bd565b915061112c82611746565b600182019050919050565b600061114460208361129b565b915061114f8261176f565b602082019050919050565b60006111676001836112bd565b915061117282611798565b600182019050919050565b6111868161157a565b82525050565b600061119882856110e3565b91506111a38261115a565b91506111af82846110e3565b91508190509392505050565b60006111c682611114565b91506111d282846110e3565b915081905092915050565b600060208201905081810360008301526111f781846110aa565b905092915050565b6000602082019050818103600083015261121881611137565b9050919050565b6000602082019050611234600083018461117d565b92915050565b6000611244611255565b905061125082826115f0565b919050565b6000604051905090565b600067ffffffffffffffff82111561127a576112796116f9565b5b61128382611728565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006112d38261157a565b91506112de8361157a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113135761131261169b565b5b828201905092915050565b60006113298261157a565b91506113348361157a565b925082611344576113436116ca565b5b828204905092915050565b6000808291508390505b6001851115611399578086048111156113755761137461169b565b5b60018516156113845780820291505b808102905061139285611739565b9450611359565b94509492505050565b60006113ad8261157a565b91506113b88361157a565b92506113e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846113ed565b905092915050565b6000826113fd57600190506114b9565b8161140b57600090506114b9565b8160018114611421576002811461142b5761145a565b60019150506114b9565b60ff84111561143d5761143c61169b565b5b8360020a9150848211156114545761145361169b565b5b506114b9565b5060208310610133831016604e8410600b841016171561148f5782820a90508381111561148a5761148961169b565b5b6114b9565b61149c848484600161134f565b925090508184048111156114b3576114b261169b565b5b81810290505b9392505050565b60006114cb8261157a565b91506114d68361157a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561150f5761150e61169b565b5b828202905092915050565b60006115258261157a565b91506115308361157a565b9250828210156115435761154261169b565b5b828203905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115b1578082015181840152602081019050611596565b838111156115c0576000848401525b50505050565b60006115d18261157a565b915060008214156115e5576115e461169b565b5b600182039050919050565b6115f982611728565b810181811067ffffffffffffffff82111715611618576116176116f9565b5b80604052505050565b600061162c8261157a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561165f5761165e61169b565b5b600182019050919050565b60006116758261157a565b91506116808361157a565b9250826116905761168f6116ca565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f3000000000000000000000000000000000000000000000000000000000000000600082015250565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b6117ca8161154e565b81146117d557600080fd5b50565b6117e18161157a565b81146117ec57600080fd5b5056fea2646970667358221220fa456257a1a67f8b8bec35fa49137d8a798a9a0f0d8fb1b13558d3781f4a26bf64736f6c63430008040033';

type SvgUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SvgUtilsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SvgUtils__factory extends ContractFactory {
  constructor(...args: SvgUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SvgUtils> {
    return super.deploy(overrides || {}) as Promise<SvgUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SvgUtils {
    return super.attach(address) as SvgUtils;
  }
  override connect(signer: Signer): SvgUtils__factory {
    return super.connect(signer) as SvgUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SvgUtilsInterface {
    return new utils.Interface(_abi) as SvgUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SvgUtils {
    return new Contract(address, _abi, signerOrProvider) as SvgUtils;
  }
}
