/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  RendererRegistry,
  RendererRegistryInterface,
} from '../../../contracts/registries/RendererRegistry';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'renderer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'outSize',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'additionalMetadataURI',
        type: 'string',
      },
    ],
    name: 'RegisteredRenderer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'addressToId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'idIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'idToAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_renderer',
        type: 'address',
      },
    ],
    name: 'registerRenderer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600060025534801561001557600080fd5b50610a97806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632a2d0c4714610051578063a3aeca9b14610081578063c4a0d4651461009f578063cb0e0d7d146100bb575b600080fd5b61006b600480360381019061006691906105ed565b6100eb565b60405161007891906106eb565b60405180910390f35b61008961011e565b6040516100969190610761565b60405180910390f35b6100b960048036038101906100b4919061055a565b610124565b005b6100d560048036038101906100d0919061055a565b610486565b6040516100e29190610761565b60405180910390f35b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6002600081548092919061013790610912565b919050555060008190508073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f7258682b000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161019a9190610706565b60206040518083038186803b1580156101b257600080fd5b505afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea9190610583565b610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610741565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a290610721565b60405180910390fd5b81600080600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600254600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc8bbcdadf3f0a000675aa840866e67b2908a640facd90e202c0eecf51d4dd7d1600254838373ffffffffffffffffffffffffffffffffffffffff1663403e4cdb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e79190610616565b8473ffffffffffffffffffffffffffffffffffffffff166392348b226040518163ffffffff1660e01b815260040160006040518083038186803b15801561042d57600080fd5b505afa158015610441573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061046a91906105ac565b60405161047a949392919061077c565b60405180910390a15050565b60016020528060005260406000206000915090505481565b60006104b16104ac846107ed565b6107c8565b9050828152602081018484840111156104c957600080fd5b6104d48482856108ae565b509392505050565b6000813590506104eb81610a1c565b92915050565b60008151905061050081610a33565b92915050565b600082601f83011261051757600080fd5b815161052784826020860161049e565b91505092915050565b60008135905061053f81610a4a565b92915050565b60008151905061055481610a4a565b92915050565b60006020828403121561056c57600080fd5b600061057a848285016104dc565b91505092915050565b60006020828403121561059557600080fd5b60006105a3848285016104f1565b91505092915050565b6000602082840312156105be57600080fd5b600082015167ffffffffffffffff8111156105d857600080fd5b6105e484828501610506565b91505092915050565b6000602082840312156105ff57600080fd5b600061060d84828501610530565b91505092915050565b60006020828403121561062857600080fd5b600061063684828501610545565b91505092915050565b6106488161083a565b82525050565b61065781610858565b82525050565b60006106688261081e565b6106728185610829565b93506106828185602086016108ae565b61068b816109b9565b840191505092915050565b60006106a3601283610829565b91506106ae826109ca565b602082019050919050565b60006106c6602083610829565b91506106d1826109f3565b602082019050919050565b6106e5816108a4565b82525050565b6000602082019050610700600083018461063f565b92915050565b600060208201905061071b600083018461064e565b92915050565b6000602082019050818103600083015261073a81610696565b9050919050565b6000602082019050818103600083015261075a816106b9565b9050919050565b600060208201905061077660008301846106dc565b92915050565b600060808201905061079160008301876106dc565b61079e602083018661063f565b6107ab60408301856106dc565b81810360608301526107bd818461065d565b905095945050505050565b60006107d26107e3565b90506107de82826108e1565b919050565b6000604051905090565b600067ffffffffffffffff8211156108085761080761098a565b5b610811826109b9565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061084582610884565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156108cc5780820151818401526020810190506108b1565b838111156108db576000848401525b50505050565b6108ea826109b9565b810181811067ffffffffffffffff821117156109095761090861098a565b5b80604052505050565b600061091d826108a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109505761094f61095b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b7f446f6573206e6f7420616269646520746f204952656e64657265722073706563600082015250565b610a258161083a565b8114610a3057600080fd5b50565b610a3c8161084c565b8114610a4757600080fd5b50565b610a53816108a4565b8114610a5e57600080fd5b5056fea26469706673582212208af793e3b5389ab293d6e82c90b53265b47aec9d3a2cc59d2530eaed4a322d3964736f6c63430008040033';

type RendererRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RendererRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RendererRegistry__factory extends ContractFactory {
  constructor(...args: RendererRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<RendererRegistry> {
    return super.deploy(overrides || {}) as Promise<RendererRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RendererRegistry {
    return super.attach(address) as RendererRegistry;
  }
  override connect(signer: Signer): RendererRegistry__factory {
    return super.connect(signer) as RendererRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RendererRegistryInterface {
    return new utils.Interface(_abi) as RendererRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): RendererRegistry {
    return new Contract(address, _abi, signerOrProvider) as RendererRegistry;
  }
}
