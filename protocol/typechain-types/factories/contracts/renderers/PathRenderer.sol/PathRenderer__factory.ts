/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  PathRenderer,
  PathRendererInterface,
} from '../../../../contracts/renderers/PathRenderer.sol/PathRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611350806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063316df61e14610097578063403e4cdb146100c757806343c5820c146100e557806392348b2214610115578063b0a2f64014610133575b600080fd5b610081600480360381019061007c9190610b0e565b610163565b60405161008e9190610dc1565b60405180910390f35b6100b160048036038101906100ac9190610b37565b6101dd565b6040516100be9190610ddc565b60405180910390f35b6100cf610218565b6040516100dc9190610dfe565b60405180910390f35b6100ff60048036038101906100fa9190610b37565b610222565b60405161010c9190610ddc565b60405180910390f35b61011d61063f565b60405161012a9190610ddc565b60405180910390f35b61014d60048036038101906101489190610b37565b610656565b60405161015a9190610ddc565b60405180910390f35b60007f100045ab000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101d657506101d58261070e565b5b9050919050565b60606101f16101ec8484610222565b610778565b6040516020016102019190610d72565b604051602081830303815290604052905092915050565b6000610600905090565b6060600060405180602001604052806000815250905060005b61020081101561061557600060f81b85856003846102599190610ec7565b81811061028f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156102c75761020190505b604c60f81b85856003846102db9190610ec7565b818110610311577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103bc5750604d60f81b85856003846103589190610ec7565b81811061038e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061043a5750606c60f81b85856003846103d69190610ec7565b81811061040c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104b85750606d60f81b85856003846104549190610ec7565b81811061048a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610604578185856003846104cd9190610ec7565b818110610503577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b610576878760016003876105219190610ec7565b61052b9190610e40565b818110610561577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff16610902565b6105df8888600260038861058a9190610ec7565b6105949190610e40565b8181106105ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff16610902565b6040516020016105f29493929190610ced565b60405160208183030381529060405291505b8061060e90610ff6565b905061023b565b50806040516020016106279190610d45565b60405160208183030381529060405291505092915050565b606060405180602001604052806000815250905090565b606060005b600060f81b848483818110610699577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146106dd5780806106d590610ff6565b91505061065b565b6106e681610902565b6040516020016106f69190610d94565b60405160208183030381529060405291505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008251141561079b576040518060200160405280600081525090506108fd565b60006040518060600160405280604081526020016112db60409139905060006003600285516107ca9190610e40565b6107d49190610e96565b60046107e09190610ec7565b67ffffffffffffffff81111561081f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108515781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156108bd576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610862565b50506003865106600181146108d957600281146108ec576108f4565b603d6001830353603d60028303536108f4565b603d60018303535b50505080925050505b919050565b6060600082141561094a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610aaa565b600082905060005b6000821461097c57808061096590610ff6565b915050600a826109759190610e96565b9150610952565b60008167ffffffffffffffff8111156109be577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156109f05781602001600182028036833780820191505090505b5090505b60008514610aa357600182610a099190610f21565b9150600a85610a189190611049565b6030610a249190610e40565b60f81b818381518110610a60577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610a9c9190610e96565b94506109f4565b8093505050505b919050565b600081359050610abe816112c3565b92915050565b60008083601f840112610ad657600080fd5b8235905067ffffffffffffffff811115610aef57600080fd5b602083019150836001820283011115610b0757600080fd5b9250929050565b600060208284031215610b2057600080fd5b6000610b2e84828501610aaf565b91505092915050565b60008060208385031215610b4a57600080fd5b600083013567ffffffffffffffff811115610b6457600080fd5b610b7085828601610ac4565b92509250509250929050565b610b8581610f55565b82525050565b610b9c610b9782610f61565b61103f565b82525050565b6000610bad82610e19565b610bb78185610e24565b9350610bc7818560208601610fc3565b610bd0816110d8565b840191505092915050565b6000610be682610e19565b610bf08185610e35565b9350610c00818560208601610fc3565b80840191505092915050565b6000610c19600283610e35565b9150610c24826110e9565b600282019050919050565b6000610c3c60b483610e35565b9150610c4782611112565b60b482019050919050565b6000610c5f600183610e35565b9150610c6a826111f9565b600182019050919050565b6000610c82600b83610e35565b9150610c8d82611222565b600b82019050919050565b6000610ca5601d83610e35565b9150610cb08261124b565b601d82019050919050565b6000610cc8602683610e35565b9150610cd382611274565b602682019050919050565b610ce781610fb9565b82525050565b6000610cf98287610bdb565b9150610d0482610c52565b9150610d108286610b8b565b600182019150610d208285610bdb565b9150610d2b82610c52565b9150610d378284610bdb565b915081905095945050505050565b6000610d5082610c2f565b9150610d5c8284610bdb565b9150610d6782610c75565b915081905092915050565b6000610d7d82610c98565b9150610d898284610bdb565b915081905092915050565b6000610d9f82610cbb565b9150610dab8284610bdb565b9150610db682610c0c565b915081905092915050565b6000602082019050610dd66000830184610b7c565b92915050565b60006020820190508181036000830152610df68184610ba2565b905092915050565b6000602082019050610e136000830184610cde565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610e4b82610fb9565b9150610e5683610fb9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e8b57610e8a61107a565b5b828201905092915050565b6000610ea182610fb9565b9150610eac83610fb9565b925082610ebc57610ebb6110a9565b5b828204905092915050565b6000610ed282610fb9565b9150610edd83610fb9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f1657610f1561107a565b5b828202905092915050565b6000610f2c82610fb9565b9150610f3783610fb9565b925082821015610f4a57610f4961107a565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b83811015610fe1578082015181840152602081019050610fc6565b83811115610ff0576000848401525b50505050565b600061100182610fb9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110345761103361107a565b5b600182019050919050565b6000819050919050565b600061105482610fb9565b915061105f83610fb9565b92508261106f5761106e6110a9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232353622206865696768743d223235362260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f68207374726f6b653d22626c61636b22207374726f6b652d77696474683d223260608201527f22207374726f6b652d6c696e656361703d22726f756e6422207374726f6b652d60808201527f6c696e656a6f696e3d22726f756e642220643d2200000000000000000000000060a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b6112cc81610f8d565b81146112d757600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220294b249fe99a723353e70b54e34755ba5919a8ddb52939161a3a7e96ecab6c9164736f6c63430008040033';

type PathRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathRenderer__factory extends ContractFactory {
  constructor(...args: PathRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PathRenderer> {
    return super.deploy(overrides || {}) as Promise<PathRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathRenderer {
    return super.attach(address) as PathRenderer;
  }
  override connect(signer: Signer): PathRenderer__factory {
    return super.connect(signer) as PathRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathRendererInterface {
    return new utils.Interface(_abi) as PathRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PathRenderer {
    return new Contract(address, _abi, signerOrProvider) as PathRenderer;
  }
}
