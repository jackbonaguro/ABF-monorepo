/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  PathRenderer,
  PathRendererInterface,
} from '../../../contracts/renderers/PathRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061131e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806343c5820c1161005b57806343c5820c1461010057806392348b2214610130578063b0a2f6401461014e578063effde6db1461017e5761007d565b806301ffc9a714610082578063316df61e146100b2578063403e4cdb146100e2575b600080fd5b61009c60048036038101906100979190610adc565b61019c565b6040516100a99190610d8f565b60405180910390f35b6100cc60048036038101906100c79190610b05565b610216565b6040516100d99190610daa565b60405180910390f35b6100ea610251565b6040516100f79190610dcc565b60405180910390f35b61011a60048036038101906101159190610b05565b610279565b6040516101279190610daa565b60405180910390f35b610138610647565b6040516101459190610daa565b60405180910390f35b61016860048036038101906101639190610b05565b61065e565b6040516101759190610daa565b60405180910390f35b61018661069f565b6040516101939190610daa565b60405180910390f35b60007ffffda370000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061020f575061020e826106dc565b5b9050919050565b606061022a6102258484610279565b610746565b60405160200161023a9190610d6d565b604051602081830303815290604052905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6060600060405180602001604052806000815250905060005b8484905060026003836102a59190610e95565b6102af9190610e0e565b101561061d57604c60f81b85856003846102c99190610e95565b8181106102ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103aa5750604d60f81b85856003846103469190610e95565b81811061037c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104285750606c60f81b85856003846103c49190610e95565b8181106103fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104a65750606d60f81b85856003846104429190610e95565b818110610478577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561060a578185856003846104bb9190610e95565b8181106104f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6105706010888860016003886105119190610e95565b61051b9190610e0e565b818110610551577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff1661056b9190610e0e565b6108d0565b6105e56010898960026003896105869190610e95565b6105909190610e0e565b8181106105c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166105e09190610e0e565b6108d0565b6040516020016105f89493929190610cbb565b60405160208183030381529060405291505b808061061590610fc4565b915050610292565b8160405160200161062e9190610d13565b6040516020818303038152906040529250505092915050565b606060405180602001604052806000815250905090565b60606106786003848490506106739190610e64565b6108d0565b6040516020016106889190610d40565b604051602081830303815290604052905092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6060600082511415610769576040518060200160405280600081525090506108cb565b60006040518060600160405280604081526020016112a960409139905060006003600285516107989190610e0e565b6107a29190610e64565b60046107ae9190610e95565b67ffffffffffffffff8111156107ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561081f5781602001600182028036833780820191505090505b509050600182016020820185865187015b8082101561088b576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610830565b50506003865106600181146108a757600281146108ba576108c2565b603d6001830353603d60028303536108c2565b603d60018303535b50505080925050505b919050565b60606000821415610918576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610a78565b600082905060005b6000821461094a57808061093390610fc4565b915050600a826109439190610e64565b9150610920565b60008167ffffffffffffffff81111561098c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156109be5781602001600182028036833780820191505090505b5090505b60008514610a71576001826109d79190610eef565b9150600a856109e69190611017565b60306109f29190610e0e565b60f81b818381518110610a2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610a6a9190610e64565b94506109c2565b8093505050505b919050565b600081359050610a8c81611291565b92915050565b60008083601f840112610aa457600080fd5b8235905067ffffffffffffffff811115610abd57600080fd5b602083019150836001820283011115610ad557600080fd5b9250929050565b600060208284031215610aee57600080fd5b6000610afc84828501610a7d565b91505092915050565b60008060208385031215610b1857600080fd5b600083013567ffffffffffffffff811115610b3257600080fd5b610b3e85828601610a92565b92509250509250929050565b610b5381610f23565b82525050565b610b6a610b6582610f2f565b61100d565b82525050565b6000610b7b82610de7565b610b858185610df2565b9350610b95818560208601610f91565b610b9e816110a6565b840191505092915050565b6000610bb482610de7565b610bbe8185610e03565b9350610bce818560208601610f91565b80840191505092915050565b6000610be7600283610e03565b9150610bf2826110b7565b600282019050919050565b6000610c0a60c083610e03565b9150610c15826110e0565b60c082019050919050565b6000610c2d600183610e03565b9150610c38826111c7565b600182019050919050565b6000610c50600b83610e03565b9150610c5b826111f0565b600b82019050919050565b6000610c73602683610e03565b9150610c7e82611219565b602682019050919050565b6000610c96601a83610e03565b9150610ca182611268565b601a82019050919050565b610cb581610f87565b82525050565b6000610cc78287610ba9565b9150610cd282610c20565b9150610cde8286610b59565b600182019150610cee8285610ba9565b9150610cf982610c20565b9150610d058284610ba9565b915081905095945050505050565b6000610d1e82610bfd565b9150610d2a8284610ba9565b9150610d3582610c43565b915081905092915050565b6000610d4b82610c66565b9150610d578284610ba9565b9150610d6282610bda565b915081905092915050565b6000610d7882610c89565b9150610d848284610ba9565b915081905092915050565b6000602082019050610da46000830184610b4a565b92915050565b60006020820190508181036000830152610dc48184610b70565b905092915050565b6000602082019050610de16000830184610cac565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610e1982610f87565b9150610e2483610f87565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5957610e58611048565b5b828201905092915050565b6000610e6f82610f87565b9150610e7a83610f87565b925082610e8a57610e89611077565b5b828204905092915050565b6000610ea082610f87565b9150610eab83610f87565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee457610ee3611048565b5b828202905092915050565b6000610efa82610f87565b9150610f0583610f87565b925082821015610f1857610f17611048565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b83811015610faf578082015181840152602081019050610f94565b83811115610fbe576000848401525b50505050565b6000610fcf82610f87565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561100257611001611048565b5b600182019050919050565b6000819050919050565b600061102282610f87565b915061102d83610f87565b92508261103d5761103c611077565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232383822206865696768743d223238382260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f682066696c6c3d226e6f6e6522207374726f6b653d22626c61636b222073747260608201527f6f6b652d77696474683d223222207374726f6b652d6c696e656361703d22726f60808201527f756e6422207374726f6b652d6c696e656a6f696e3d22726f756e642220643d2260a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000600082015250565b61129a81610f5b565b81146112a557600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212209f8d012d22a5f3fae58b344c8cc68017f5600825be1f33994ff636ad7e59780b64736f6c63430008040033';

type PathRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathRenderer__factory extends ContractFactory {
  constructor(...args: PathRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PathRenderer> {
    return super.deploy(overrides || {}) as Promise<PathRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathRenderer {
    return super.attach(address) as PathRenderer;
  }
  override connect(signer: Signer): PathRenderer__factory {
    return super.connect(signer) as PathRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathRendererInterface {
    return new utils.Interface(_abi) as PathRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PathRenderer {
    return new Contract(address, _abi, signerOrProvider) as PathRenderer;
  }
}
