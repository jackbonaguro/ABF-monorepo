/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  PathRenderer,
  PathRendererInterface,
} from '../../../contracts/renderers/PathRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061136d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063316df61e14610097578063403e4cdb146100c757806343c5820c146100e557806392348b2214610115578063b0a2f64014610133575b600080fd5b610081600480360381019061007c9190610b2b565b610163565b60405161008e9190610dde565b60405180910390f35b6100b160048036038101906100ac9190610b54565b6101dd565b6040516100be9190610df9565b60405180910390f35b6100cf610218565b6040516100dc9190610e1b565b60405180910390f35b6100ff60048036038101906100fa9190610b54565b610222565b60405161010c9190610df9565b60405180910390f35b61011d61065c565b60405161012a9190610df9565b60405180910390f35b61014d60048036038101906101489190610b54565b610673565b60405161015a9190610df9565b60405180910390f35b60007f100045ab000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101d657506101d58261072b565b5b9050919050565b60606101f16101ec8484610222565b610795565b6040516020016102019190610d8f565b604051602081830303815290604052905092915050565b6000610600905090565b6060600060405180602001604052806000815250905060005b61020081101561063257600060f81b85856003846102599190610ee4565b81811061028f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156102cb576102019050610621565b604c60f81b85856003846102df9190610ee4565b818110610315577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c05750604d60f81b858560038461035c9190610ee4565b818110610392577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061043e5750606c60f81b85856003846103da9190610ee4565b818110610410577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104bc5750606d60f81b85856003846104589190610ee4565b81811061048e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610620578185856003846104d19190610ee4565b818110610507577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6105866010888860016003886105279190610ee4565b6105319190610e5d565b818110610567577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166105819190610e5d565b61091f565b6105fb60108989600260038961059c9190610ee4565b6105a69190610e5d565b8181106105dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166105f69190610e5d565b61091f565b60405160200161060e9493929190610d0a565b60405160208183030381529060405291505b5b8061062b90611013565b905061023b565b50806040516020016106449190610d62565b60405160208183030381529060405291505092915050565b606060405180602001604052806000815250905090565b606060005b600060f81b8484838181106106b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146106fa5780806106f290611013565b915050610678565b6107038161091f565b6040516020016107139190610db1565b60405160208183030381529060405291505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000825114156107b85760405180602001604052806000815250905061091a565b60006040518060600160405280604081526020016112f860409139905060006003600285516107e79190610e5d565b6107f19190610eb3565b60046107fd9190610ee4565b67ffffffffffffffff81111561083c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561086e5781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156108da576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f811685015184536001840193505061087f565b50506003865106600181146108f6576002811461090957610911565b603d6001830353603d6002830353610911565b603d60018303535b50505080925050505b919050565b60606000821415610967576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610ac7565b600082905060005b6000821461099957808061098290611013565b915050600a826109929190610eb3565b915061096f565b60008167ffffffffffffffff8111156109db577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a0d5781602001600182028036833780820191505090505b5090505b60008514610ac057600182610a269190610f3e565b9150600a85610a359190611066565b6030610a419190610e5d565b60f81b818381518110610a7d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610ab99190610eb3565b9450610a11565b8093505050505b919050565b600081359050610adb816112e0565b92915050565b60008083601f840112610af357600080fd5b8235905067ffffffffffffffff811115610b0c57600080fd5b602083019150836001820283011115610b2457600080fd5b9250929050565b600060208284031215610b3d57600080fd5b6000610b4b84828501610acc565b91505092915050565b60008060208385031215610b6757600080fd5b600083013567ffffffffffffffff811115610b8157600080fd5b610b8d85828601610ae1565b92509250509250929050565b610ba281610f72565b82525050565b610bb9610bb482610f7e565b61105c565b82525050565b6000610bca82610e36565b610bd48185610e41565b9350610be4818560208601610fe0565b610bed816110f5565b840191505092915050565b6000610c0382610e36565b610c0d8185610e52565b9350610c1d818560208601610fe0565b80840191505092915050565b6000610c36600283610e52565b9150610c4182611106565b600282019050919050565b6000610c5960c083610e52565b9150610c648261112f565b60c082019050919050565b6000610c7c600183610e52565b9150610c8782611216565b600182019050919050565b6000610c9f600b83610e52565b9150610caa8261123f565b600b82019050919050565b6000610cc2601d83610e52565b9150610ccd82611268565b601d82019050919050565b6000610ce5602683610e52565b9150610cf082611291565b602682019050919050565b610d0481610fd6565b82525050565b6000610d168287610bf8565b9150610d2182610c6f565b9150610d2d8286610ba8565b600182019150610d3d8285610bf8565b9150610d4882610c6f565b9150610d548284610bf8565b915081905095945050505050565b6000610d6d82610c4c565b9150610d798284610bf8565b9150610d8482610c92565b915081905092915050565b6000610d9a82610cb5565b9150610da68284610bf8565b915081905092915050565b6000610dbc82610cd8565b9150610dc88284610bf8565b9150610dd382610c29565b915081905092915050565b6000602082019050610df36000830184610b99565b92915050565b60006020820190508181036000830152610e138184610bbf565b905092915050565b6000602082019050610e306000830184610cfb565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610e6882610fd6565b9150610e7383610fd6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ea857610ea7611097565b5b828201905092915050565b6000610ebe82610fd6565b9150610ec983610fd6565b925082610ed957610ed86110c6565b5b828204905092915050565b6000610eef82610fd6565b9150610efa83610fd6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3357610f32611097565b5b828202905092915050565b6000610f4982610fd6565b9150610f5483610fd6565b925082821015610f6757610f66611097565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b83811015610ffe578082015181840152602081019050610fe3565b8381111561100d576000848401525b50505050565b600061101e82610fd6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561105157611050611097565b5b600182019050919050565b6000819050919050565b600061107182610fd6565b915061107c83610fd6565b92508261108c5761108b6110c6565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232383822206865696768743d223238382260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f682066696c6c3d226e6f6e6522207374726f6b653d22626c61636b222073747260608201527f6f6b652d77696474683d223222207374726f6b652d6c696e656361703d22726f60808201527f756e6422207374726f6b652d6c696e656a6f696e3d22726f756e642220643d2260a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b6112e981610faa565b81146112f457600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212202d5c72db2936d08c3ef381bce1a72cf3a486be82aefd7f7bea77019c512a3f8a64736f6c63430008040033';

type PathRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathRenderer__factory extends ContractFactory {
  constructor(...args: PathRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PathRenderer> {
    return super.deploy(overrides || {}) as Promise<PathRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathRenderer {
    return super.attach(address) as PathRenderer;
  }
  override connect(signer: Signer): PathRenderer__factory {
    return super.connect(signer) as PathRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathRendererInterface {
    return new utils.Interface(_abi) as PathRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PathRenderer {
    return new Contract(address, _abi, signerOrProvider) as PathRenderer;
  }
}
