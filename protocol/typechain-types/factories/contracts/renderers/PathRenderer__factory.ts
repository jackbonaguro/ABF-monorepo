/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  PathRenderer,
  PathRendererInterface,
} from '../../../contracts/renderers/PathRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611377806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063316df61e14610097578063403e4cdb146100c757806343c5820c146100e557806392348b2214610115578063b0a2f64014610133575b600080fd5b610081600480360381019061007c9190610b35565b610163565b60405161008e9190610de8565b60405180910390f35b6100b160048036038101906100ac9190610b5e565b6101dd565b6040516100be9190610e03565b60405180910390f35b6100cf610218565b6040516100dc9190610e25565b60405180910390f35b6100ff60048036038101906100fa9190610b5e565b610240565b60405161010c9190610e03565b60405180910390f35b61011d610666565b60405161012a9190610e03565b60405180910390f35b61014d60048036038101906101489190610b5e565b61067d565b60405161015a9190610e03565b60405180910390f35b60007f100045ab000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101d657506101d582610735565b5b9050919050565b60606101f16101ec8484610240565b61079f565b6040516020016102019190610d99565b604051602081830303815290604052905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6060600060405180602001604052806000815250905060005b600060f81b858560038461026d9190610eee565b8181106102a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461063c57604c60f81b85856003846102e89190610eee565b81811061031e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c95750604d60f81b85856003846103659190610eee565b81811061039b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104475750606c60f81b85856003846103e39190610eee565b818110610419577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104c55750606d60f81b85856003846104619190610eee565b818110610497577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610629578185856003846104da9190610eee565b818110610510577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b61058f6010888860016003886105309190610eee565b61053a9190610e67565b818110610570577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff1661058a9190610e67565b610929565b6106046010898960026003896105a59190610eee565b6105af9190610e67565b8181106105e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166105ff9190610e67565b610929565b6040516020016106179493929190610d14565b60405160208183030381529060405291505b80806106349061101d565b915050610259565b8160405160200161064d9190610d6c565b6040516020818303038152906040529250505092915050565b606060405180602001604052806000815250905090565b606060005b600060f81b8484838181106106c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146107045780806106fc9061101d565b915050610682565b61070d81610929565b60405160200161071d9190610dbb565b60405160208183030381529060405291505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000825114156107c257604051806020016040528060008152509050610924565b600060405180606001604052806040815260200161130260409139905060006003600285516107f19190610e67565b6107fb9190610ebd565b60046108079190610eee565b67ffffffffffffffff811115610846577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108785781602001600182028036833780820191505090505b509050600182016020820185865187015b808210156108e4576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610889565b505060038651066001811461090057600281146109135761091b565b603d6001830353603d600283035361091b565b603d60018303535b50505080925050505b919050565b60606000821415610971576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610ad1565b600082905060005b600082146109a357808061098c9061101d565b915050600a8261099c9190610ebd565b9150610979565b60008167ffffffffffffffff8111156109e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a175781602001600182028036833780820191505090505b5090505b60008514610aca57600182610a309190610f48565b9150600a85610a3f9190611070565b6030610a4b9190610e67565b60f81b818381518110610a87577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610ac39190610ebd565b9450610a1b565b8093505050505b919050565b600081359050610ae5816112ea565b92915050565b60008083601f840112610afd57600080fd5b8235905067ffffffffffffffff811115610b1657600080fd5b602083019150836001820283011115610b2e57600080fd5b9250929050565b600060208284031215610b4757600080fd5b6000610b5584828501610ad6565b91505092915050565b60008060208385031215610b7157600080fd5b600083013567ffffffffffffffff811115610b8b57600080fd5b610b9785828601610aeb565b92509250509250929050565b610bac81610f7c565b82525050565b610bc3610bbe82610f88565b611066565b82525050565b6000610bd482610e40565b610bde8185610e4b565b9350610bee818560208601610fea565b610bf7816110ff565b840191505092915050565b6000610c0d82610e40565b610c178185610e5c565b9350610c27818560208601610fea565b80840191505092915050565b6000610c40600283610e5c565b9150610c4b82611110565b600282019050919050565b6000610c6360c083610e5c565b9150610c6e82611139565b60c082019050919050565b6000610c86600183610e5c565b9150610c9182611220565b600182019050919050565b6000610ca9600b83610e5c565b9150610cb482611249565b600b82019050919050565b6000610ccc601d83610e5c565b9150610cd782611272565b601d82019050919050565b6000610cef602683610e5c565b9150610cfa8261129b565b602682019050919050565b610d0e81610fe0565b82525050565b6000610d208287610c02565b9150610d2b82610c79565b9150610d378286610bb2565b600182019150610d478285610c02565b9150610d5282610c79565b9150610d5e8284610c02565b915081905095945050505050565b6000610d7782610c56565b9150610d838284610c02565b9150610d8e82610c9c565b915081905092915050565b6000610da482610cbf565b9150610db08284610c02565b915081905092915050565b6000610dc682610ce2565b9150610dd28284610c02565b9150610ddd82610c33565b915081905092915050565b6000602082019050610dfd6000830184610ba3565b92915050565b60006020820190508181036000830152610e1d8184610bc9565b905092915050565b6000602082019050610e3a6000830184610d05565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610e7282610fe0565b9150610e7d83610fe0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb257610eb16110a1565b5b828201905092915050565b6000610ec882610fe0565b9150610ed383610fe0565b925082610ee357610ee26110d0565b5b828204905092915050565b6000610ef982610fe0565b9150610f0483610fe0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3d57610f3c6110a1565b5b828202905092915050565b6000610f5382610fe0565b9150610f5e83610fe0565b925082821015610f7157610f706110a1565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b83811015611008578082015181840152602081019050610fed565b83811115611017576000848401525b50505050565b600061102882610fe0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561105b5761105a6110a1565b5b600182019050919050565b6000819050919050565b600061107b82610fe0565b915061108683610fe0565b925082611096576110956110d0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232383822206865696768743d223238382260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f682066696c6c3d226e6f6e6522207374726f6b653d22626c61636b222073747260608201527f6f6b652d77696474683d223222207374726f6b652d6c696e656361703d22726f60808201527f756e6422207374726f6b652d6c696e656a6f696e3d22726f756e642220643d2260a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b6112f381610fb4565b81146112fe57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212204082e30d19789110bf2a4ff213cb717114cd735a540217740568d659a7df8f8d64736f6c63430008040033';

type PathRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathRenderer__factory extends ContractFactory {
  constructor(...args: PathRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PathRenderer> {
    return super.deploy(overrides || {}) as Promise<PathRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathRenderer {
    return super.attach(address) as PathRenderer;
  }
  override connect(signer: Signer): PathRenderer__factory {
    return super.connect(signer) as PathRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathRendererInterface {
    return new utils.Interface(_abi) as PathRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PathRenderer {
    return new Contract(address, _abi, signerOrProvider) as PathRenderer;
  }
}
