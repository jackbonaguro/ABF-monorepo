/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  PathRenderer,
  PathRendererInterface,
} from '../../../contracts/renderers/PathRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117b68061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461015b57806392348b2214610179578063b0a2f64014610197578063effde6db146101c7578063f2fde38b146101e55761009e565b806301ffc9a7146100a3578063316df61e146100d3578063403e4cdb1461010357806343c5820c14610121578063715018a614610151575b600080fd5b6100bd60048036038101906100b89190610e03565b610201565b6040516100ca9190611126565b60405180910390f35b6100ed60048036038101906100e89190610e2c565b61027b565b6040516100fa9190611141565b60405180910390f35b61010b6102b6565b60405161011891906111a3565b60405180910390f35b61013b60048036038101906101369190610e2c565b6102de565b6040516101489190611141565b60405180910390f35b6101596106ac565b005b610163610734565b604051610170919061110b565b60405180910390f35b610181610743565b60405161018e9190611141565b60405180910390f35b6101b160048036038101906101ac9190610e2c565b61075a565b6040516101be9190611141565b60405180910390f35b6101cf61079b565b6040516101dc9190611141565b60405180910390f35b6101ff60048036038101906101fa9190610dda565b6107d8565b005b60007f7258682b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102745750610273826108d0565b5b9050919050565b606061028f61028a84846102de565b61093a565b60405160200161029f91906110e9565b604051602081830303815290604052905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6060600060405180602001604052806000815250905060005b84849050600260038361030a919061126c565b61031491906111e5565b101561068257604c60f81b858560038461032e919061126c565b818110610364577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040f5750604d60f81b85856003846103ab919061126c565b8181106103e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061048d5750606c60f81b8585600384610429919061126c565b81811061045f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061050b5750606d60f81b85856003846104a7919061126c565b8181106104dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561066f57818585600384610520919061126c565b818110610556577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6105d5601088886001600388610576919061126c565b61058091906111e5565b8181106105b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff166105d091906111e5565b610ac4565b61064a6010898960026003896105eb919061126c565b6105f591906111e5565b81811061062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b60f81c60ff1661064591906111e5565b610ac4565b60405160200161065d9493929190611037565b60405160208183030381529060405291505b808061067a906113cd565b9150506102f7565b81604051602001610693919061108f565b6040516020818303038152906040529250505092915050565b6106b4610c71565b73ffffffffffffffffffffffffffffffffffffffff166106d2610734565b73ffffffffffffffffffffffffffffffffffffffff1614610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90611183565b60405180910390fd5b6107326000610c79565b565b600061073e610d3d565b905090565b606060405180602001604052806000815250905090565b606061077460038484905061076f919061123b565b610ac4565b60405160200161078491906110bc565b604051602081830303815290604052905092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b6107e0610c71565b73ffffffffffffffffffffffffffffffffffffffff166107fe610734565b73ffffffffffffffffffffffffffffffffffffffff1614610854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084b90611183565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb90611163565b60405180910390fd5b6108cd81610c79565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008251141561095d57604051806020016040528060008152509050610abf565b6000604051806060016040528060408152602001611741604091399050600060036002855161098c91906111e5565b610996919061123b565b60046109a2919061126c565b67ffffffffffffffff8111156109e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a135781602001600182028036833780820191505090505b509050600182016020820185865187015b80821015610a7f576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610a24565b5050600386510660018114610a9b5760028114610aae57610ab6565b603d6001830353603d6002830353610ab6565b603d60018303535b50505080925050505b919050565b60606000821415610b0c576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610c6c565b600082905060005b60008214610b3e578080610b27906113cd565b915050600a82610b37919061123b565b9150610b14565b60008167ffffffffffffffff811115610b80577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610bb25781602001600182028036833780820191505090505b5090505b60008514610c6557600182610bcb91906112c6565b9150600a85610bda9190611420565b6030610be691906111e5565b60f81b818381518110610c22577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610c5e919061123b565b9450610bb6565b8093505050505b919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081359050610d7581611712565b92915050565b600081359050610d8a81611729565b92915050565b60008083601f840112610da257600080fd5b8235905067ffffffffffffffff811115610dbb57600080fd5b602083019150836001820283011115610dd357600080fd5b9250929050565b600060208284031215610dec57600080fd5b6000610dfa84828501610d66565b91505092915050565b600060208284031215610e1557600080fd5b6000610e2384828501610d7b565b91505092915050565b60008060208385031215610e3f57600080fd5b600083013567ffffffffffffffff811115610e5957600080fd5b610e6585828601610d90565b92509250509250929050565b610e7a816112fa565b82525050565b610e898161130c565b82525050565b610ea0610e9b82611318565b611416565b82525050565b6000610eb1826111be565b610ebb81856111c9565b9350610ecb81856020860161139a565b610ed4816114af565b840191505092915050565b6000610eea826111be565b610ef481856111da565b9350610f0481856020860161139a565b80840191505092915050565b6000610f1d6002836111da565b9150610f28826114c0565b600282019050919050565b6000610f406026836111c9565b9150610f4b826114e9565b604082019050919050565b6000610f6360c0836111da565b9150610f6e82611538565b60c082019050919050565b6000610f866001836111da565b9150610f918261161f565b600182019050919050565b6000610fa96020836111c9565b9150610fb482611648565b602082019050919050565b6000610fcc600b836111da565b9150610fd782611671565b600b82019050919050565b6000610fef6026836111da565b9150610ffa8261169a565b602682019050919050565b6000611012601a836111da565b915061101d826116e9565b601a82019050919050565b61103181611390565b82525050565b60006110438287610edf565b915061104e82610f79565b915061105a8286610e8f565b60018201915061106a8285610edf565b915061107582610f79565b91506110818284610edf565b915081905095945050505050565b600061109a82610f56565b91506110a68284610edf565b91506110b182610fbf565b915081905092915050565b60006110c782610fe2565b91506110d38284610edf565b91506110de82610f10565b915081905092915050565b60006110f482611005565b91506111008284610edf565b915081905092915050565b60006020820190506111206000830184610e71565b92915050565b600060208201905061113b6000830184610e80565b92915050565b6000602082019050818103600083015261115b8184610ea6565b905092915050565b6000602082019050818103600083015261117c81610f33565b9050919050565b6000602082019050818103600083015261119c81610f9c565b9050919050565b60006020820190506111b86000830184611028565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006111f082611390565b91506111fb83611390565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112305761122f611451565b5b828201905092915050565b600061124682611390565b915061125183611390565b92508261126157611260611480565b5b828204905092915050565b600061127782611390565b915061128283611390565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112bb576112ba611451565b5b828202905092915050565b60006112d182611390565b91506112dc83611390565b9250828210156112ef576112ee611451565b5b828203905092915050565b600061130582611370565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156113b857808201518184015260208101905061139d565b838111156113c7576000848401525b50505050565b60006113d882611390565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561140b5761140a611451565b5b600182019050919050565b6000819050919050565b600061142b82611390565b915061143683611390565b92508261144657611445611480565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060008201527f30302f737667222077696474683d2232383822206865696768743d223238382260208201527f207374796c653d226261636b67726f756e643a23463146314631223e3c70617460408201527f682066696c6c3d226e6f6e6522207374726f6b653d22626c61636b222073747260608201527f6f6b652d77696474683d223222207374726f6b652d6c696e656361703d22726f60808201527f756e6422207374726f6b652d6c696e656a6f696e3d22726f756e642220643d2260a082015250565b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f22202f3e203c2f7376673e000000000000000000000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000600082015250565b61171b816112fa565b811461172657600080fd5b50565b61173281611344565b811461173d57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122094f108d5a7aa7e7f371d349d68e4226a03a16ea739e3e7f9ac57790734d01e8364736f6c63430008040033';

type PathRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathRenderer__factory extends ContractFactory {
  constructor(...args: PathRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PathRenderer> {
    return super.deploy(overrides || {}) as Promise<PathRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathRenderer {
    return super.attach(address) as PathRenderer;
  }
  override connect(signer: Signer): PathRenderer__factory {
    return super.connect(signer) as PathRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathRendererInterface {
    return new utils.Interface(_abi) as PathRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PathRenderer {
    return new Contract(address, _abi, signerOrProvider) as PathRenderer;
  }
}
