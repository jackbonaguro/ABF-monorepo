/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  DebugRenderer,
  DebugRendererInterface,
} from '../../../contracts/renderers/DebugRenderer';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6110178061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461015b57806392348b2214610179578063b0a2f64014610197578063effde6db146101c7578063f2fde38b146101e55761009e565b806301ffc9a7146100a3578063316df61e146100d3578063403e4cdb1461010357806343c5820c14610121578063715018a614610151575b600080fd5b6100bd60048036038101906100b89190610929565b610201565b6040516100ca9190610b41565b60405180910390f35b6100ed60048036038101906100e89190610952565b61027b565b6040516100fa9190610b5c565b60405180910390f35b61010b61028f565b6040516101189190610bbe565b60405180910390f35b61013b60048036038101906101369190610952565b6102b7565b6040516101489190610b5c565b60405180910390f35b61015961035f565b005b6101636103e7565b6040516101709190610b26565b60405180910390f35b6101816103f6565b60405161018e9190610b5c565b60405180910390f35b6101b160048036038101906101ac9190610952565b610416565b6040516101be9190610b5c565b60405180910390f35b6101cf61044b565b6040516101dc9190610b5c565b60405180910390f35b6101ff60048036038101906101fa9190610900565b610488565b005b60007f7258682b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610274575061027382610580565b5b9050919050565b606061028783836102b7565b905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6060600060405180602001604052806000815250905060005b848490508110156103545781858583818110610315577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b604051602001610330929190610ad1565b6040516020818303038152906040529150808061034c90610d8e565b9150506102d0565b819250505092915050565b6103676105ea565b73ffffffffffffffffffffffffffffffffffffffff166103856103e7565b73ffffffffffffffffffffffffffffffffffffffff16146103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290610b9e565b60405180910390fd5b6103e560006105f2565b565b60006103f16106b6565b905090565b6060604051806080016040528060428152602001610fa060429139905090565b6060610424838390506106df565b6040516020016104349190610af9565b604051602081830303815290604052905092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b6104906105ea565b73ffffffffffffffffffffffffffffffffffffffff166104ae6103e7565b73ffffffffffffffffffffffffffffffffffffffff1614610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90610b9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90610b7e565b60405180910390fd5b61057d816105f2565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000821415610727576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610887565b600082905060005b6000821461075957808061074290610d8e565b915050600a826107529190610c56565b915061072f565b60008167ffffffffffffffff81111561079b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107cd5781602001600182028036833780820191505090505b5090505b60008514610880576001826107e69190610c87565b9150600a856107f59190610de1565b60306108019190610c00565b60f81b81838151811061083d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856108799190610c56565b94506107d1565b8093505050505b919050565b60008135905061089b81610f71565b92915050565b6000813590506108b081610f88565b92915050565b60008083601f8401126108c857600080fd5b8235905067ffffffffffffffff8111156108e157600080fd5b6020830191508360018202830111156108f957600080fd5b9250929050565b60006020828403121561091257600080fd5b60006109208482850161088c565b91505092915050565b60006020828403121561093b57600080fd5b6000610949848285016108a1565b91505092915050565b6000806020838503121561096557600080fd5b600083013567ffffffffffffffff81111561097f57600080fd5b61098b858286016108b6565b92509250509250929050565b6109a081610cbb565b82525050565b6109af81610ccd565b82525050565b6109c66109c182610cd9565b610dd7565b82525050565b60006109d782610bd9565b6109e18185610be4565b93506109f1818560208601610d5b565b6109fa81610e70565b840191505092915050565b6000610a1082610bd9565b610a1a8185610bf5565b9350610a2a818560208601610d5b565b80840191505092915050565b6000610a43600283610bf5565b9150610a4e82610e81565b600282019050919050565b6000610a66602683610be4565b9150610a7182610eaa565b604082019050919050565b6000610a89602083610be4565b9150610a9482610ef9565b602082019050919050565b6000610aac602683610bf5565b9150610ab782610f22565b602682019050919050565b610acb81610d51565b82525050565b6000610add8285610a05565b9150610ae982846109b5565b6001820191508190509392505050565b6000610b0482610a9f565b9150610b108284610a05565b9150610b1b82610a36565b915081905092915050565b6000602082019050610b3b6000830184610997565b92915050565b6000602082019050610b5660008301846109a6565b92915050565b60006020820190508181036000830152610b7681846109cc565b905092915050565b60006020820190508181036000830152610b9781610a59565b9050919050565b60006020820190508181036000830152610bb781610a7c565b9050919050565b6000602082019050610bd36000830184610ac2565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610c0b82610d51565b9150610c1683610d51565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c4b57610c4a610e12565b5b828201905092915050565b6000610c6182610d51565b9150610c6c83610d51565b925082610c7c57610c7b610e41565b5b828204905092915050565b6000610c9282610d51565b9150610c9d83610d51565b925082821015610cb057610caf610e12565b5b828203905092915050565b6000610cc682610d31565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610d79578082015181840152602081019050610d5e565b83811115610d88576000848401525b50505050565b6000610d9982610d51565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dcc57610dcb610e12565b5b600182019050919050565b6000819050919050565b6000610dec82610d51565b9150610df783610d51565b925082610e0757610e06610e41565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b610f7a81610cbb565b8114610f8557600080fd5b50565b610f9181610d05565b8114610f9c57600080fd5b5056fe697066733a2f2f6261666b726569687233367178746572727374676c7263666c67323536636764336b6937616b76716e3633336d33746d6f7562677061706a736e75a26469706673582212201c57ffd48a53b1873339ee30f6f5b20ebeb64e6f604cc4bd9969601577c255be64736f6c63430008040033';

type DebugRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugRenderer__factory extends ContractFactory {
  constructor(...args: DebugRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<DebugRenderer> {
    return super.deploy(overrides || {}) as Promise<DebugRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DebugRenderer {
    return super.attach(address) as DebugRenderer;
  }
  override connect(signer: Signer): DebugRenderer__factory {
    return super.connect(signer) as DebugRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugRendererInterface {
    return new utils.Interface(_abi) as DebugRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DebugRenderer {
    return new Contract(address, _abi, signerOrProvider) as DebugRenderer;
  }
}
