/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  DebugRenderer,
  DebugRendererInterface,
} from '../../../contracts/renderers/DebugRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506109b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063316df61e1461005c578063403e4cdb1461008c57806343c5820c146100aa57806392348b22146100da578063b0a2f640146100f8575b600080fd5b61007660048036038101906100719190610518565b610128565b6040516100839190610688565b60405180910390f35b61009461013c565b6040516100a191906106aa565b60405180910390f35b6100c460048036038101906100bf9190610518565b610146565b6040516100d19190610688565b60405180910390f35b6100e2610252565b6040516100ef9190610688565b60405180910390f35b610112600480360381019061010d9190610518565b610269565b60405161011f9190610688565b60405180910390f35b60606101348383610146565b905092915050565b6000610100905090565b6060600060405180602001604052806000815250905060005b600060f81b85858381811061019d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146102475781858583818110610208577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b604051602001610223929190610633565b6040516020818303038152906040529150808061023f90610810565b91505061015f565b819250505092915050565b606060405180602001604052806000815250905090565b606060005b600060f81b8484838181106102ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146102f05780806102e890610810565b91505061026e565b6102f981610321565b604051602001610309919061065b565b60405160208183030381529060405291505092915050565b60606000821415610369576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506104c9565b600082905060005b6000821461039b57808061038490610810565b915050600a826103949190610742565b9150610371565b60008167ffffffffffffffff8111156103dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561040f5781602001600182028036833780820191505090505b5090505b600085146104c2576001826104289190610773565b9150600a856104379190610863565b603061044391906106ec565b60f81b81838151811061047f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856104bb9190610742565b9450610413565b8093505050505b919050565b60008083601f8401126104e057600080fd5b8235905067ffffffffffffffff8111156104f957600080fd5b60208301915083600182028301111561051157600080fd5b9250929050565b6000806020838503121561052b57600080fd5b600083013567ffffffffffffffff81111561054557600080fd5b610551858286016104ce565b92509250509250929050565b61056e610569826107a7565b610859565b82525050565b600061057f826106c5565b61058981856106d0565b93506105998185602086016107dd565b6105a2816108f2565b840191505092915050565b60006105b8826106c5565b6105c281856106e1565b93506105d28185602086016107dd565b80840191505092915050565b60006105eb6002836106e1565b91506105f682610903565b600282019050919050565b600061060e6026836106e1565b91506106198261092c565b602682019050919050565b61062d816107d3565b82525050565b600061063f82856105ad565b915061064b828461055d565b6001820191508190509392505050565b600061066682610601565b915061067282846105ad565b915061067d826105de565b915081905092915050565b600060208201905081810360008301526106a28184610574565b905092915050565b60006020820190506106bf6000830184610624565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006106f7826107d3565b9150610702836107d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561073757610736610894565b5b828201905092915050565b600061074d826107d3565b9150610758836107d3565b925082610768576107676108c3565b5b828204905092915050565b600061077e826107d3565b9150610789836107d3565b92508282101561079c5761079b610894565b5b828203905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b838110156107fb5780820151818401526020810190506107e0565b8381111561080a576000848401525b50505050565b600061081b826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561084e5761084d610894565b5b600182019050919050565b6000819050919050565b600061086e826107d3565b9150610879836107d3565b925082610889576108886108c3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a000000000000000000000000000000000000000000000000000060208201525056fea2646970667358221220666056472f9fe6c2f9822d3b889088a150862730f9206fc03a55464f0b7630c664736f6c63430008040033';

type DebugRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugRenderer__factory extends ContractFactory {
  constructor(...args: DebugRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<DebugRenderer> {
    return super.deploy(overrides || {}) as Promise<DebugRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DebugRenderer {
    return super.attach(address) as DebugRenderer;
  }
  override connect(signer: Signer): DebugRenderer__factory {
    return super.connect(signer) as DebugRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugRendererInterface {
    return new utils.Interface(_abi) as DebugRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DebugRenderer {
    return new Contract(address, _abi, signerOrProvider) as DebugRenderer;
  }
}
