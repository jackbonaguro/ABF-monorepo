/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  DebugRenderer,
  DebugRendererInterface,
} from '../../../contracts/renderers/DebugRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610ba5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063316df61e14610097578063403e4cdb146100c757806343c5820c146100e557806392348b2214610115578063b0a2f64014610133575b600080fd5b610081600480360381019061007c919061066a565b610163565b60405161008e9190610812565b60405180910390f35b6100b160048036038101906100ac9190610693565b6101dd565b6040516100be919061082d565b60405180910390f35b6100cf6101f1565b6040516100dc919061084f565b60405180910390f35b6100ff60048036038101906100fa9190610693565b610219565b60405161010c919061082d565b60405180910390f35b61011d610325565b60405161012a919061082d565b60405180910390f35b61014d60048036038101906101489190610693565b61033c565b60405161015a919061082d565b60405180910390f35b60007f100045ab000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101d657506101d5826103f4565b5b9050919050565b60606101e98383610219565b905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6060600060405180602001604052806000815250905060005b600060f81b858583818110610270577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461031a57818585838181106102db577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6040516020016102f69291906107bd565b60405160208183030381529060405291508080610312906109ed565b915050610232565b819250505092915050565b606060405180602001604052806000815250905090565b606060005b600060f81b84848381811061037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103c35780806103bb906109ed565b915050610341565b6103cc8161045e565b6040516020016103dc91906107e5565b60405160208183030381529060405291505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008214156104a6576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610606565b600082905060005b600082146104d85780806104c1906109ed565b915050600a826104d191906108e7565b91506104ae565b60008167ffffffffffffffff81111561051a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561054c5781602001600182028036833780820191505090505b5090505b600085146105ff576001826105659190610918565b9150600a856105749190610a40565b60306105809190610891565b60f81b8183815181106105bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856105f891906108e7565b9450610550565b8093505050505b919050565b60008135905061061a81610b58565b92915050565b60008083601f84011261063257600080fd5b8235905067ffffffffffffffff81111561064b57600080fd5b60208301915083600182028301111561066357600080fd5b9250929050565b60006020828403121561067c57600080fd5b600061068a8482850161060b565b91505092915050565b600080602083850312156106a657600080fd5b600083013567ffffffffffffffff8111156106c057600080fd5b6106cc85828601610620565b92509250509250929050565b6106e18161094c565b82525050565b6106f86106f382610958565b610a36565b82525050565b60006107098261086a565b6107138185610875565b93506107238185602086016109ba565b61072c81610acf565b840191505092915050565b60006107428261086a565b61074c8185610886565b935061075c8185602086016109ba565b80840191505092915050565b6000610775600283610886565b915061078082610ae0565b600282019050919050565b6000610798602683610886565b91506107a382610b09565b602682019050919050565b6107b7816109b0565b82525050565b60006107c98285610737565b91506107d582846106e7565b6001820191508190509392505050565b60006107f08261078b565b91506107fc8284610737565b915061080782610768565b915081905092915050565b600060208201905061082760008301846106d8565b92915050565b6000602082019050818103600083015261084781846106fe565b905092915050565b600060208201905061086460008301846107ae565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061089c826109b0565b91506108a7836109b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108dc576108db610a71565b5b828201905092915050565b60006108f2826109b0565b91506108fd836109b0565b92508261090d5761090c610aa0565b5b828204905092915050565b6000610923826109b0565b915061092e836109b0565b92508282101561094157610940610a71565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b838110156109d85780820151818401526020810190506109bd565b838111156109e7576000848401525b50505050565b60006109f8826109b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a2b57610a2a610a71565b5b600182019050919050565b6000819050919050565b6000610a4b826109b0565b9150610a56836109b0565b925082610a6657610a65610aa0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b610b6181610984565b8114610b6c57600080fd5b5056fea2646970667358221220774d3685f0cc9e534e6b41a3dcdd371f0687e0a1bea93f509470e790694ed9ce64736f6c63430008040033';

type DebugRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugRenderer__factory extends ContractFactory {
  constructor(...args: DebugRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<DebugRenderer> {
    return super.deploy(overrides || {}) as Promise<DebugRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DebugRenderer {
    return super.attach(address) as DebugRenderer;
  }
  override connect(signer: Signer): DebugRenderer__factory {
    return super.connect(signer) as DebugRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugRendererInterface {
    return new utils.Interface(_abi) as DebugRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DebugRenderer {
    return new Contract(address, _abi, signerOrProvider) as DebugRenderer;
  }
}
