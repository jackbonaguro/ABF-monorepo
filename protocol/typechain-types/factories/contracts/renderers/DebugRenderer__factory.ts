/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  DebugRenderer,
  DebugRendererInterface,
} from '../../../contracts/renderers/DebugRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610b87806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063316df61e14610097578063403e4cdb146100c757806343c5820c146100e557806392348b2214610115578063b0a2f64014610133575b600080fd5b610081600480360381019061007c919061064c565b610163565b60405161008e91906107f4565b60405180910390f35b6100b160048036038101906100ac9190610675565b6101dd565b6040516100be919061080f565b60405180910390f35b6100cf6101f1565b6040516100dc9190610831565b60405180910390f35b6100ff60048036038101906100fa9190610675565b6101fb565b60405161010c919061080f565b60405180910390f35b61011d610307565b60405161012a919061080f565b60405180910390f35b61014d60048036038101906101489190610675565b61031e565b60405161015a919061080f565b60405180910390f35b60007f100045ab000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101d657506101d5826103d6565b5b9050919050565b60606101e983836101fb565b905092915050565b6000610100905090565b6060600060405180602001604052806000815250905060005b600060f81b858583818110610252577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146102fc57818585838181106102bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6040516020016102d892919061079f565b604051602081830303815290604052915080806102f4906109cf565b915050610214565b819250505092915050565b606060405180602001604052806000815250905090565b606060005b600060f81b848483818110610361577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103a557808061039d906109cf565b915050610323565b6103ae81610440565b6040516020016103be91906107c7565b60405160208183030381529060405291505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000821415610488576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506105e8565b600082905060005b600082146104ba5780806104a3906109cf565b915050600a826104b391906108c9565b9150610490565b60008167ffffffffffffffff8111156104fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561052e5781602001600182028036833780820191505090505b5090505b600085146105e15760018261054791906108fa565b9150600a856105569190610a22565b60306105629190610873565b60f81b81838151811061059e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856105da91906108c9565b9450610532565b8093505050505b919050565b6000813590506105fc81610b3a565b92915050565b60008083601f84011261061457600080fd5b8235905067ffffffffffffffff81111561062d57600080fd5b60208301915083600182028301111561064557600080fd5b9250929050565b60006020828403121561065e57600080fd5b600061066c848285016105ed565b91505092915050565b6000806020838503121561068857600080fd5b600083013567ffffffffffffffff8111156106a257600080fd5b6106ae85828601610602565b92509250509250929050565b6106c38161092e565b82525050565b6106da6106d58261093a565b610a18565b82525050565b60006106eb8261084c565b6106f58185610857565b935061070581856020860161099c565b61070e81610ab1565b840191505092915050565b60006107248261084c565b61072e8185610868565b935061073e81856020860161099c565b80840191505092915050565b6000610757600283610868565b915061076282610ac2565b600282019050919050565b600061077a602683610868565b915061078582610aeb565b602682019050919050565b61079981610992565b82525050565b60006107ab8285610719565b91506107b782846106c9565b6001820191508190509392505050565b60006107d28261076d565b91506107de8284610719565b91506107e98261074a565b915081905092915050565b600060208201905061080960008301846106ba565b92915050565b6000602082019050818103600083015261082981846106e0565b905092915050565b60006020820190506108466000830184610790565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061087e82610992565b915061088983610992565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108be576108bd610a53565b5b828201905092915050565b60006108d482610992565b91506108df83610992565b9250826108ef576108ee610a82565b5b828204905092915050565b600061090582610992565b915061091083610992565b92508282101561092357610922610a53565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b838110156109ba57808201518184015260208101905061099f565b838111156109c9576000848401525b50505050565b60006109da82610992565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0d57610a0c610a53565b5b600182019050919050565b6000819050919050565b6000610a2d82610992565b9150610a3883610992565b925082610a4857610a47610a82565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b610b4381610966565b8114610b4e57600080fd5b5056fea2646970667358221220a5ccc7c2b148817fded2bc1ba70dc1ad7d3cdf6d26779ed8f11a7a71645205d264736f6c63430008040033';

type DebugRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugRenderer__factory extends ContractFactory {
  constructor(...args: DebugRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<DebugRenderer> {
    return super.deploy(overrides || {}) as Promise<DebugRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DebugRenderer {
    return super.attach(address) as DebugRenderer;
  }
  override connect(signer: Signer): DebugRenderer__factory {
    return super.connect(signer) as DebugRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugRendererInterface {
    return new utils.Interface(_abi) as DebugRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DebugRenderer {
    return new Contract(address, _abi, signerOrProvider) as DebugRenderer;
  }
}
