/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  DebugRenderer,
  DebugRendererInterface,
} from '../../../contracts/renderers/DebugRenderer';

const _abi = [
  {
    inputs: [],
    name: 'additionalMetadataURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'attributes',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'render',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renderAttributeKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    name: 'renderRaw',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610b34806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806343c5820c1161005b57806343c5820c1461010057806392348b2214610130578063b0a2f6401461014e578063effde6db1461017e5761007d565b806301ffc9a714610082578063316df61e146100b2578063403e4cdb146100e2575b600080fd5b61009c600480360381019061009791906105f9565b61019c565b6040516100a991906107a1565b60405180910390f35b6100cc60048036038101906100c79190610622565b610216565b6040516100d991906107bc565b60405180910390f35b6100ea61022a565b6040516100f791906107de565b60405180910390f35b61011a60048036038101906101159190610622565b610252565b60405161012791906107bc565b60405180910390f35b6101386102fa565b60405161014591906107bc565b60405180910390f35b61016860048036038101906101639190610622565b610311565b60405161017591906107bc565b60405180910390f35b610186610346565b60405161019391906107bc565b60405180910390f35b60007ffffda370000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061020f575061020e82610383565b5b9050919050565b60606102228383610252565b905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6060600060405180602001604052806000815250905060005b848490508110156102ef57818585838181106102b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b6040516020016102cb92919061074c565b604051602081830303815290604052915080806102e79061097c565b91505061026b565b819250505092915050565b606060405180602001604052806000815250905090565b606061031f838390506103ed565b60405160200161032f9190610774565b604051602081830303815290604052905092915050565b60606040518060400160405280600581526020017f696d616765000000000000000000000000000000000000000000000000000000815250905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000821415610435576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610595565b600082905060005b600082146104675780806104509061097c565b915050600a826104609190610876565b915061043d565b60008167ffffffffffffffff8111156104a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156104db5781602001600182028036833780820191505090505b5090505b6000851461058e576001826104f491906108a7565b9150600a8561050391906109cf565b603061050f9190610820565b60f81b81838151811061054b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856105879190610876565b94506104df565b8093505050505b919050565b6000813590506105a981610ae7565b92915050565b60008083601f8401126105c157600080fd5b8235905067ffffffffffffffff8111156105da57600080fd5b6020830191508360018202830111156105f257600080fd5b9250929050565b60006020828403121561060b57600080fd5b60006106198482850161059a565b91505092915050565b6000806020838503121561063557600080fd5b600083013567ffffffffffffffff81111561064f57600080fd5b61065b858286016105af565b92509250509250929050565b610670816108db565b82525050565b610687610682826108e7565b6109c5565b82525050565b6000610698826107f9565b6106a28185610804565b93506106b2818560208601610949565b6106bb81610a5e565b840191505092915050565b60006106d1826107f9565b6106db8185610815565b93506106eb818560208601610949565b80840191505092915050565b6000610704600283610815565b915061070f82610a6f565b600282019050919050565b6000610727602683610815565b915061073282610a98565b602682019050919050565b6107468161093f565b82525050565b600061075882856106c6565b91506107648284610676565b6001820191508190509392505050565b600061077f8261071a565b915061078b82846106c6565b9150610796826106f7565b915081905092915050565b60006020820190506107b66000830184610667565b92915050565b600060208201905081810360008301526107d6818461068d565b905092915050565b60006020820190506107f3600083018461073d565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061082b8261093f565b91506108368361093f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561086b5761086a610a00565b5b828201905092915050565b60006108818261093f565b915061088c8361093f565b92508261089c5761089b610a2f565b5b828204905092915050565b60006108b28261093f565b91506108bd8361093f565b9250828210156108d0576108cf610a00565b5b828203905092915050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b8381101561096757808201518184015260208101905061094c565b83811115610976576000848401525b50505050565b60006109878261093f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109ba576109b9610a00565b5b600182019050919050565b6000819050919050565b60006109da8261093f565b91506109e58361093f565b9250826109f5576109f4610a2f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b7f7b2274726169745f74797065223a202244617461204c656e677468222c20227660008201527f616c7565223a0000000000000000000000000000000000000000000000000000602082015250565b610af081610913565b8114610afb57600080fd5b5056fea2646970667358221220e93ebe2d78399e800d4108e969352cb1247b3f1d3d09d1f2ec371fabab43713e64736f6c63430008040033';

type DebugRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugRendererConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugRenderer__factory extends ContractFactory {
  constructor(...args: DebugRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<DebugRenderer> {
    return super.deploy(overrides || {}) as Promise<DebugRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DebugRenderer {
    return super.attach(address) as DebugRenderer;
  }
  override connect(signer: Signer): DebugRenderer__factory {
    return super.connect(signer) as DebugRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugRendererInterface {
    return new utils.Interface(_abi) as DebugRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DebugRenderer {
    return new Contract(address, _abi, signerOrProvider) as DebugRenderer;
  }
}
