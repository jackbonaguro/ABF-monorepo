/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  BrainFuckURIConstructor,
  BrainFuckURIConstructorInterface,
} from '../../contracts/BrainFuckURIConstructor';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'nft',
        type: 'address',
      },
    ],
    name: 'contractURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'seed',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'debug',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'seed',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'constants',
        type: 'bytes32',
      },
    ],
    name: 'tokenSeed',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'seed',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: 'constants',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'code',
        type: 'bytes',
      },
      {
        internalType: 'contract IRenderer',
        name: 'renderer',
        type: 'IRenderer',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x611e19610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635ea309101461005b578063832654401461008b578063a950ae78146100bb578063bd5dd9bf146100eb575b600080fd5b61007560048036038101906100709190610f32565b61011b565b60405161008291906114b3565b60405180910390f35b6100a560048036038101906100a09190610e36565b610404565b6040516100b29190611438565b60405180910390f35b6100d560048036038101906100d09190610de2565b610459565b6040516100e29190611438565b60405180910390f35b61010560048036038101906101009190610ede565b610485565b60405161011291906114b3565b60405180910390f35b6060600086610129896104f6565b60405160200161013a929190611315565b6040516020818303038152906040529050600073__$2ed50a41fe33e68c713a011c6653b27115$__63f26c4fda866101738a8d8b610404565b6040518363ffffffff1660e01b815260040161019092919061147c565b60006040518083038186803b1580156101a857600080fd5b505af41580156101bc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101e59190610da1565b905060008473ffffffffffffffffffffffffffffffffffffffff1663316df61e836040518263ffffffff1660e01b8152600401610222919061145a565b60006040518083038186803b15801561023a57600080fd5b505afa15801561024e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102779190610e9d565b90506103d6838673ffffffffffffffffffffffffffffffffffffffff1663effde6db6040518163ffffffff1660e01b815260040160006040518083038186803b1580156102c357600080fd5b505afa1580156102d7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103009190610e9d565b838873ffffffffffffffffffffffffffffffffffffffff1663b0a2f640876040518263ffffffff1660e01b815260040161033a919061145a565b60006040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061038f9190610e9d565b6103ae8a73ffffffffffffffffffffffffffffffffffffffff166106a3565b6040516020016103c2959493929190611389565b604051602081830303815290604052610729565b6040516020016103e69190611416565b60405160208183030381529060405293505050509695505050505050565b606081848460405160200161041a9291906112ed565b604051602081830303815290604052805190602001206040516020016104419291906112c1565b60405160208183030381529060405290509392505050565b6060828260405160200161046e9291906112ed565b604051602081830303815290604052905092915050565b60606104cf836104aa8473ffffffffffffffffffffffffffffffffffffffff166106a3565b6040516020016104bb929190611344565b604051602081830303815290604052610729565b6040516020016104df9190611416565b604051602081830303815290604052905092915050565b6060600082141561053e576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061069e565b600082905060005b60008214610570578080610559906117f6565b915050600a826105699190611642565b9150610546565b60008167ffffffffffffffff8111156105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156105e45781602001600182028036833780820191505090505b5090505b60008514610697576001826105fd91906116cd565b9150600a8561060c9190611853565b603061061891906115ec565b60f81b818381518110610654577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856106909190611642565b94506105e8565b8093505050505b919050565b606060008214156106eb576040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152509050610724565b600082905060005b60008214610715578080610706906117f6565b915050600882901c91506106f3565b61071f84826108b3565b925050505b919050565b606060008251141561074c576040518060200160405280600081525090506108ae565b6000604051806060016040528060408152602001611da4604091399050600060036002855161077b91906115ec565b6107859190611642565b60046107919190611673565b67ffffffffffffffff8111156107d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108025781602001600182028036833780820191505090505b509050600182016020820185865187015b8082101561086e576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050610813565b505060038651066001811461088a576002811461089d576108a5565b603d6001830353603d60028303536108a5565b603d60018303535b50505080925050505b919050565b6060600060028360026108c69190611673565b6108d091906115ec565b67ffffffffffffffff81111561090f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156109415781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061099f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a29577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610a699190611673565b610a7391906115ec565b90505b6001811115610b5f577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610adb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610b18577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610b589061179b565b9050610a76565b5060008414610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9a906114d5565b60405180910390fd5b8091505092915050565b6000610bc0610bbb8461151a565b6114f5565b905082815260208101848484011115610bd857600080fd5b610be3848285611759565b509392505050565b6000610bfe610bf98461151a565b6114f5565b905082815260208101848484011115610c1657600080fd5b610c21848285611768565b509392505050565b6000610c3c610c378461154b565b6114f5565b905082815260208101848484011115610c5457600080fd5b610c5f848285611759565b509392505050565b6000610c7a610c758461154b565b6114f5565b905082815260208101848484011115610c9257600080fd5b610c9d848285611768565b509392505050565b600081359050610cb481611d47565b92915050565b600081359050610cc981611d5e565b92915050565b600082601f830112610ce057600080fd5b8135610cf0848260208601610bad565b91505092915050565b600082601f830112610d0a57600080fd5b8151610d1a848260208601610beb565b91505092915050565b600081359050610d3281611d75565b92915050565b600082601f830112610d4957600080fd5b8135610d59848260208601610c29565b91505092915050565b600082601f830112610d7357600080fd5b8151610d83848260208601610c67565b91505092915050565b600081359050610d9b81611d8c565b92915050565b600060208284031215610db357600080fd5b600082015167ffffffffffffffff811115610dcd57600080fd5b610dd984828501610cf9565b91505092915050565b60008060408385031215610df557600080fd5b600083013567ffffffffffffffff811115610e0f57600080fd5b610e1b85828601610ccf565b9250506020610e2c85828601610d8c565b9150509250929050565b600080600060608486031215610e4b57600080fd5b600084013567ffffffffffffffff811115610e6557600080fd5b610e7186828701610ccf565b9350506020610e8286828701610d8c565b9250506040610e9386828701610cba565b9150509250925092565b600060208284031215610eaf57600080fd5b600082015167ffffffffffffffff811115610ec957600080fd5b610ed584828501610d62565b91505092915050565b60008060408385031215610ef157600080fd5b600083013567ffffffffffffffff811115610f0b57600080fd5b610f1785828601610d38565b9250506020610f2885828601610ca5565b9150509250929050565b60008060008060008060c08789031215610f4b57600080fd5b6000610f5989828a01610d8c565b965050602087013567ffffffffffffffff811115610f7657600080fd5b610f8289828a01610d38565b955050604087013567ffffffffffffffff811115610f9f57600080fd5b610fab89828a01610ccf565b9450506060610fbc89828a01610cba565b935050608087013567ffffffffffffffff811115610fd957600080fd5b610fe589828a01610ccf565b92505060a0610ff689828a01610d23565b9150509295509295509295565b61101461100f82611713565b61183f565b82525050565b60006110258261157c565b61102f8185611592565b935061103f818560208601611768565b61104881611911565b840191505092915050565b600061105e8261157c565b61106881856115a3565b9350611078818560208601611768565b61108181611911565b840191505092915050565b60006110978261157c565b6110a181856115b4565b93506110b1818560208601611768565b80840191505092915050565b60006110c882611587565b6110d281856115d0565b93506110e2818560208601611768565b6110eb81611911565b840191505092915050565b600061110182611587565b61110b81856115e1565b935061111b818560208601611768565b80840191505092915050565b60006111346020836115bf565b915061113f82611922565b602082019050919050565b60006111576009836115e1565b91506111628261194b565b600982019050919050565b600061117a6002836115e1565b915061118582611974565b600282019050919050565b600061119d6024836115e1565b91506111a88261199d565b602482019050919050565b60006111c06004836115e1565b91506111cb826119ec565b600482019050919050565b60006111e3608f836115e1565b91506111ee82611a15565b608f82019050919050565b600061120761013e836115e1565b915061121282611ad6565b61013e82019050919050565b600061122b603a836115e1565b915061123682611c57565b603a82019050919050565b600061124e601d836115e1565b915061125982611ca6565b601d82019050919050565b60006112716022836115e1565b915061127c82611ccf565b602282019050919050565b60006112946004836115e1565b915061129f82611d1e565b600482019050919050565b6112bb6112b68261174f565b611849565b82525050565b60006112cd8285611003565b6020820191506112dd8284611003565b6020820191508190509392505050565b60006112f9828561108c565b915061130582846112aa565b6020820191508190509392505050565b600061132182856110f6565b915061132c8261116d565b915061133882846110f6565b91508190509392505050565b600061134f8261114a565b915061135b82856110f6565b9150611366826111d6565b915061137282846110f6565b915061137d826111f9565b91508190509392505050565b60006113948261114a565b91506113a082886110f6565b91506113ab8261121e565b91506113b782876110f6565b91506113c2826111b3565b91506113ce82866110f6565b91506113d982611190565b91506113e582856110f6565b91506113f082611264565b91506113fc82846110f6565b915061140782611287565b91508190509695505050505050565b600061142182611241565b915061142d82846110f6565b915081905092915050565b600060208201905081810360008301526114528184611053565b905092915050565b60006020820190508181036000830152611474818461101a565b905092915050565b600060408201905081810360008301526114968185611053565b905081810360208301526114aa8184611053565b90509392505050565b600060208201905081810360008301526114cd81846110bd565b905092915050565b600060208201905081810360008301526114ee81611127565b9050919050565b60006114ff611510565b905061150b82826117c5565b919050565b6000604051905090565b600067ffffffffffffffff821115611535576115346118e2565b5b61153e82611911565b9050602081019050919050565b600067ffffffffffffffff821115611566576115656118e2565b5b61156f82611911565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006115f78261174f565b91506116028361174f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561163757611636611884565b5b828201905092915050565b600061164d8261174f565b91506116588361174f565b925082611668576116676118b3565b5b828204905092915050565b600061167e8261174f565b91506116898361174f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116c2576116c1611884565b5b828202905092915050565b60006116d88261174f565b91506116e38361174f565b9250828210156116f6576116f5611884565b5b828203905092915050565b600061170c8261172f565b9050919050565b6000819050919050565b600061172882611701565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561178657808201518184015260208101905061176b565b83811115611795576000848401525b50505050565b60006117a68261174f565b915060008214156117ba576117b9611884565b5b600182039050919050565b6117ce82611911565b810181811067ffffffffffffffff821117156117ed576117ec6118e2565b5b80604052505050565b60006118018261174f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561183457611833611884565b5b600182019050919050565b6000819050919050565b6000819050919050565b600061185e8261174f565b91506118698361174f565b925082611879576118786118b3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f2023000000000000000000000000000000000000000000000000000000000000600082015250565b7f222c20226173706563745f726174696f223a312c20226174747269627574657360008201527f223a205b00000000000000000000000000000000000000000000000000000000602082015250565b7f223a202200000000000000000000000000000000000000000000000000000000600082015250565b7f222c20226465736372697074696f6e223a20224f6e2d636861696e2067656e6560008201527f72617469766520617274207772697474656e20696e207468652065736f74657260208201527f69632070726f6772616d6d696e67206c616e677561676520427261696e46756360408201527f6b2e222c202265787465726e616c5f6c696e6b223a202268747470733a2f2f6160608201527f62662e6465762f70726f6a6563742f0000000000000000000000000000000000608082015250565b7f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b60008201527f6261736536342c50484e325a79423361575230614430694d6a55324969426f5a60208201527f576c6e61485139496a49314e694967646d6c6c64304a76654430694d4341774960408201527f4449314e6941794e54596949475a7062477739496d3576626d5569494868746260608201527f47357a50534a6f644852774f693876643364334c6e637a4c6d39795a7938794d60808201527f4441774c334e325a79492b436a78795a574e30494864705a48526f505349794e60a08201527f5459694947686c6157646f644430694d6a55324969426d6157787350534a336160c08201527f476c305a53497650676f3859326c795932786c49474e34505349784d6a67754e60e08201527f53496759336b39496a45794f43343149694279505349794d4334314969426d616101008201527f57787350534a696247466a6179497650676f384c334e325a7a344b22207d000061012082015250565b7f222c226465736372697074696f6e223a202247656e657261746976652061727460008201527f207772697474656e20696e20427261696e4675636b2e222c2022000000000000602082015250565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b7f7b2274726169745f74797065223a2252656e6465726572222c2276616c75652260008201527f3a22000000000000000000000000000000000000000000000000000000000000602082015250565b7f227d5d7d00000000000000000000000000000000000000000000000000000000600082015250565b611d5081611701565b8114611d5b57600080fd5b50565b611d6781611713565b8114611d7257600080fd5b50565b611d7e8161171d565b8114611d8957600080fd5b50565b611d958161174f565b8114611da057600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220d84e7ef74ec5488bf745ef10be5e9cf4bfb9c3de856cea86db9fef8c22c33c8364736f6c63430008040033';

type BrainFuckURIConstructorConstructorParams =
  | [
      linkLibraryAddresses: BrainFuckURIConstructorLibraryAddresses,
      signer?: Signer,
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrainFuckURIConstructorConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class BrainFuckURIConstructor__factory extends ContractFactory {
  constructor(...args: BrainFuckURIConstructorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BrainFuckURIConstructor__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BrainFuckURIConstructorLibraryAddresses,
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$2ed50a41fe33e68c713a011c6653b27115\\$__', 'g'),
      linkLibraryAddresses['contracts/BrainFuckVM.sol:BrainFuckVM']
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<BrainFuckURIConstructor> {
    return super.deploy(overrides || {}) as Promise<BrainFuckURIConstructor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BrainFuckURIConstructor {
    return super.attach(address) as BrainFuckURIConstructor;
  }
  override connect(signer: Signer): BrainFuckURIConstructor__factory {
    return super.connect(signer) as BrainFuckURIConstructor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrainFuckURIConstructorInterface {
    return new utils.Interface(_abi) as BrainFuckURIConstructorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BrainFuckURIConstructor {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as BrainFuckURIConstructor;
  }
}

export interface BrainFuckURIConstructorLibraryAddresses {
  ['contracts/BrainFuckVM.sol:BrainFuckVM']: string;
}
