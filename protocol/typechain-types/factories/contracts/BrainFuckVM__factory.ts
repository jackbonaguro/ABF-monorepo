/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  BrainFuckVM,
  BrainFuckVMInterface,
} from '../../contracts/BrainFuckVM';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'code',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'input',
        type: 'bytes',
      },
    ],
    name: 'runBrainFuckCode',
    outputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x610c67610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063f26c4fda1461003a575b600080fd5b610054600480360381019061004f91906108f8565b61006a565b6040516100619190610a16565b60405180910390f35b60606040518060200160405280600081525090506000602067ffffffffffffffff8111156100c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156100f35781602001600182028036833780820191505090505b509050600080600080600061040467ffffffffffffffff811115610140577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561016e5781602001602082028036833780820191505090505b5090506000805b8c8c905081101561089e5760008d8d838181106101bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b9050851561025f57605b60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561020a57848061020690610b9e565b9550505b605d60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561025a57600085141561024a5760009550610259565b848061025590610b74565b9550505b5b61088c565b602b60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561034c5760018988815181106102c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c6102e09190610a5f565b60f81b89888151811061031c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b602d60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156104395760018988815181106103b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c6103cd9190610aca565b60f81b898881518110610409577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b602c60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610536578b8b9050881061047b57600060f81b6104bf565b8b8b898181106104b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b5b8988815181106104f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350878061053290610b9e565b9850505b602e60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156105cc578989888151811061059e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b6040516020016105ba9291906109ee565b60405160208183030381529060405299505b603e60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561060957868061060590610b9e565b9750505b603c60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561064657868061064290610b74565b9750505b605b60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561074457600060f81b8988815181106106b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156106ee5760019550610743565b81848481518110610728577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050828061073f90610b9e565b9350505b5b605d60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561088b57600060f81b8988815181106107b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461083657836001846107f09190610a96565b81518110610827577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151915061088a565b600084848061084490610b74565b95508151811061087d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5b5b508061089790610b9e565b9050610175565b5050505050505050949350505050565b60008083601f8401126108c057600080fd5b8235905067ffffffffffffffff8111156108d957600080fd5b6020830191508360018202830111156108f157600080fd5b9250929050565b6000806000806040858703121561090e57600080fd5b600085013567ffffffffffffffff81111561092857600080fd5b610934878288016108ae565b9450945050602085013567ffffffffffffffff81111561095357600080fd5b61095f878288016108ae565b925092505092959194509250565b61097e61097982610afe565b610be7565b82525050565b600061098f82610a38565b6109998185610a43565b93506109a9818560208601610b41565b6109b281610c20565b840191505092915050565b60006109c882610a38565b6109d28185610a54565b93506109e2818560208601610b41565b80840191505092915050565b60006109fa82856109bd565b9150610a06828461096d565b6001820191508190509392505050565b60006020820190508181036000830152610a308184610984565b905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610a6a82610b34565b9150610a7583610b34565b92508260ff03821115610a8b57610a8a610bf1565b5b828201905092915050565b6000610aa182610b2a565b9150610aac83610b2a565b925082821015610abf57610abe610bf1565b5b828203905092915050565b6000610ad582610b34565b9150610ae083610b34565b925082821015610af357610af2610bf1565b5b828203905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610b5f578082015181840152602081019050610b44565b83811115610b6e576000848401525b50505050565b6000610b7f82610b2a565b91506000821415610b9357610b92610bf1565b5b600182039050919050565b6000610ba982610b2a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bdc57610bdb610bf1565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea26469706673582212208e4a77d1d7e7bbc8b168df6ece99e8bf17b50e5d2633d8cfd76a8bab468f6de064736f6c63430008040033';

type BrainFuckVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrainFuckVMConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BrainFuckVM__factory extends ContractFactory {
  constructor(...args: BrainFuckVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<BrainFuckVM> {
    return super.deploy(overrides || {}) as Promise<BrainFuckVM>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BrainFuckVM {
    return super.attach(address) as BrainFuckVM;
  }
  override connect(signer: Signer): BrainFuckVM__factory {
    return super.connect(signer) as BrainFuckVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrainFuckVMInterface {
    return new utils.Interface(_abi) as BrainFuckVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BrainFuckVM {
    return new Contract(address, _abi, signerOrProvider) as BrainFuckVM;
  }
}
