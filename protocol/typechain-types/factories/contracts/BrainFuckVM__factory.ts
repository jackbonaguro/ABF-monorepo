/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';
import type {
  BrainFuckVM,
  BrainFuckVMInterface,
} from '../../contracts/BrainFuckVM';

const _abi = [
  {
    inputs: [],
    name: 'LOOPING_STACK_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TAPE_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'code',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'input',
        type: 'bytes',
      },
    ],
    name: 'runBrainFuckCode',
    outputs: [
      {
        internalType: 'bytes',
        name: 'out',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x610e2a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063e0006a6114610050578063f26c4fda1461006e578063ffec62f91461009e575b600080fd5b6100586100bc565b6040516100659190610be0565b60405180910390f35b61008860048036038101906100839190610a91565b6100c2565b6040516100959190610bbe565b60405180910390f35b6100a6610a41565b6040516100b39190610be0565b60405180910390f35b61100081565b6060604051806020016040528060008152509050600061753067ffffffffffffffff81111561011a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561014c5781602001600182028036833780820191505090505b509050600080600080600061100067ffffffffffffffff811115610199577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101c75781602001602082028036833780820191505090505b5090506000805b8c8c9050811015610a315760008d8d83818110610214577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b905085156102b857605b60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561026357848061025f90610d61565b9550505b605d60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156102b35760008514156102a357600095506102b2565b84806102ae90610d37565b9550505b5b610a1f565b602b60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156104425760ff60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916898881518110610346577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103d35760018988815181106103b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c6103cb9190610c22565b60f81b6103d9565b600060f81b5b898881518110610412577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b602d60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156105cc57600060f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168988815181106104d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461055d57600189888151811061053d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c6105559190610c8d565b60f81b610563565b60ff60f81b5b89888151811061059c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b602c60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156106c9578b8b9050881061060e57600060f81b610652565b8b8b89818110610647577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050013560f81c60f81b5b89888151811061068b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535087806106c590610d61565b9850505b602e60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561075f5789898881518110610731577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60405160200161074d929190610b96565b60405160208183030381529060405299505b603e60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561079c57868061079890610d61565b9750505b603c60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156107d95786806107d590610d37565b9750505b605b60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156108d757600060f81b898881518110610845577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561088157600195506108d6565b818484815181106108bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505082806108d290610d61565b9350505b5b605d60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610a1e57600060f81b898881518110610943577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146109c957836001846109839190610c59565b815181106109ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519150610a1d565b60008484806109d790610d37565b955081518110610a10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5b5b5080610a2a90610d61565b90506101ce565b5050505050505050949350505050565b61753081565b60008083601f840112610a5957600080fd5b8235905067ffffffffffffffff811115610a7257600080fd5b602083019150836001820283011115610a8a57600080fd5b9250929050565b60008060008060408587031215610aa757600080fd5b600085013567ffffffffffffffff811115610ac157600080fd5b610acd87828801610a47565b9450945050602085013567ffffffffffffffff811115610aec57600080fd5b610af887828801610a47565b925092505092959194509250565b610b17610b1282610cc1565b610daa565b82525050565b6000610b2882610bfb565b610b328185610c06565b9350610b42818560208601610d04565b610b4b81610de3565b840191505092915050565b6000610b6182610bfb565b610b6b8185610c17565b9350610b7b818560208601610d04565b80840191505092915050565b610b9081610ced565b82525050565b6000610ba28285610b56565b9150610bae8284610b06565b6001820191508190509392505050565b60006020820190508181036000830152610bd88184610b1d565b905092915050565b6000602082019050610bf56000830184610b87565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610c2d82610cf7565b9150610c3883610cf7565b92508260ff03821115610c4e57610c4d610db4565b5b828201905092915050565b6000610c6482610ced565b9150610c6f83610ced565b925082821015610c8257610c81610db4565b5b828203905092915050565b6000610c9882610cf7565b9150610ca383610cf7565b925082821015610cb657610cb5610db4565b5b828203905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610d22578082015181840152602081019050610d07565b83811115610d31576000848401525b50505050565b6000610d4282610ced565b91506000821415610d5657610d55610db4565b5b600182039050919050565b6000610d6c82610ced565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9f57610d9e610db4565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220b952fd577cf21f4d523aeadd44001da1b185cb98bd4714b86ebaeb68b96d458864736f6c63430008040033';

type BrainFuckVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrainFuckVMConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BrainFuckVM__factory extends ContractFactory {
  constructor(...args: BrainFuckVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<BrainFuckVM> {
    return super.deploy(overrides || {}) as Promise<BrainFuckVM>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BrainFuckVM {
    return super.attach(address) as BrainFuckVM;
  }
  override connect(signer: Signer): BrainFuckVM__factory {
    return super.connect(signer) as BrainFuckVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrainFuckVMInterface {
    return new utils.Interface(_abi) as BrainFuckVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BrainFuckVM {
    return new Contract(address, _abi, signerOrProvider) as BrainFuckVM;
  }
}
